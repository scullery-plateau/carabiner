{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cobblestone/char-index.service.ts","webpack:///./src/app/cobblestone/cobblestone-file.service.ts","webpack:///./src/app/cobblestone/cobblestone-map/cobblestone-map.component.html","webpack:///./src/app/cobblestone/cobblestone-map/cobblestone-map.component.scss","webpack:///./src/app/cobblestone/cobblestone-map/cobblestone-map.component.ts","webpack:///./src/app/cobblestone/cobblestone.component.html","webpack:///./src/app/cobblestone/cobblestone.component.scss","webpack:///./src/app/cobblestone/cobblestone.component.ts","webpack:///./src/app/cobblestone/map-page-picker/map-page-picker.component.html","webpack:///./src/app/cobblestone/map-page-picker/map-page-picker.component.scss","webpack:///./src/app/cobblestone/map-page-picker/map-page-picker.component.ts","webpack:///./src/app/cobblestone/model/TransformedTile.ts","webpack:///./src/app/cobblestone/model/cobblestone-app-state.ts","webpack:///./src/app/cobblestone/model/cobblestone-data.ts","webpack:///./src/app/cobblestone/model/transform.ts","webpack:///./src/app/cobblestone/palettes-and-tiles/palettes-and-tiles.component.html","webpack:///./src/app/cobblestone/palettes-and-tiles/palettes-and-tiles.component.scss","webpack:///./src/app/cobblestone/palettes-and-tiles/palettes-and-tiles.component.ts","webpack:///./src/app/cobblestone/tile-transformer.service.ts","webpack:///./src/app/cobblestone/transformed-tile-def/transformed-tile-def.component.html","webpack:///./src/app/cobblestone/transformed-tile-def/transformed-tile-def.component.scss","webpack:///./src/app/cobblestone/transformed-tile-def/transformed-tile-def.component.ts","webpack:///./src/app/cobblestone/transformed-tile-display/transformed-tile-display.component.html","webpack:///./src/app/cobblestone/transformed-tile-display/transformed-tile-display.component.scss","webpack:///./src/app/cobblestone/transformed-tile-display/transformed-tile-display.component.ts","webpack:///./src/app/cobblestone/transformed-tile-ref/transformed-tile-ref.component.html","webpack:///./src/app/cobblestone/transformed-tile-ref/transformed-tile-ref.component.scss","webpack:///./src/app/cobblestone/transformed-tile-ref/transformed-tile-ref.component.ts","webpack:///./src/app/cobblestone/transformed-tiles/transformed-tiles.component.html","webpack:///./src/app/cobblestone/transformed-tiles/transformed-tiles.component.scss","webpack:///./src/app/cobblestone/transformed-tiles/transformed-tiles.component.ts","webpack:///./src/app/mastermold/count-update.ts","webpack:///./src/app/mastermold/image-list/image-list.component.html","webpack:///./src/app/mastermold/image-list/image-list.component.scss","webpack:///./src/app/mastermold/image-list/image-list.component.ts","webpack:///./src/app/mastermold/mastermold.component.html","webpack:///./src/app/mastermold/mastermold.component.scss","webpack:///./src/app/mastermold/mastermold.component.ts","webpack:///./src/app/mastermold/mini-gallery/mini-gallery.component.html","webpack:///./src/app/mastermold/mini-gallery/mini-gallery.component.scss","webpack:///./src/app/mastermold/mini-gallery/mini-gallery.component.ts","webpack:///./src/app/mastermold/mini.ts","webpack:///./src/app/mastermold/publish-minis.service.ts","webpack:///./src/app/mock/http-mock-request-interceptor.ts","webpack:///./src/app/mock/mock-responses.ts","webpack:///./src/app/outfitter/dataset-meta-layers.ts","webpack:///./src/app/outfitter/dataset-meta-part.ts","webpack:///./src/app/outfitter/dataset-meta.ts","webpack:///./src/app/outfitter/display-layer/display-layer.component.html","webpack:///./src/app/outfitter/display-layer/display-layer.component.scss","webpack:///./src/app/outfitter/display-layer/display-layer.component.ts","webpack:///./src/app/outfitter/head-parts.ts","webpack:///./src/app/outfitter/outfitter-display/outfitter-display.component.html","webpack:///./src/app/outfitter/outfitter-display/outfitter-display.component.scss","webpack:///./src/app/outfitter/outfitter-display/outfitter-display.component.ts","webpack:///./src/app/outfitter/outfitter.component.html","webpack:///./src/app/outfitter/outfitter.component.scss","webpack:///./src/app/outfitter/outfitter.component.ts","webpack:///./src/app/outfitter/outfitter.service.ts","webpack:///./src/app/outfitter/part-groups.ts","webpack:///./src/app/outfitter/part-type.ts","webpack:///./src/app/outfitter/part-types.ts","webpack:///./src/app/outfitter/scales.ts","webpack:///./src/app/outfitter/schematic-layer.ts","webpack:///./src/app/outfitter/schematic.ts","webpack:///./src/app/outfitter/torso-tops.ts","webpack:///./src/app/outfitter/xy.ts","webpack:///./src/app/pixel-canvas/pixel-canvas.component.html","webpack:///./src/app/pixel-canvas/pixel-canvas.component.scss","webpack:///./src/app/pixel-canvas/pixel-canvas.component.ts","webpack:///./src/app/pixel-painter/pixel-painter.component.html","webpack:///./src/app/pixel-painter/pixel-painter.component.scss","webpack:///./src/app/pixel-painter/pixel-painter.component.ts","webpack:///./src/app/spritely/spritely-file.service.ts","webpack:///./src/app/spritely/spritely.component.html","webpack:///./src/app/spritely/spritely.component.scss","webpack:///./src/app/spritely/spritely.component.ts","webpack:///./src/app/util/accordian/accordian.component.html","webpack:///./src/app/util/accordian/accordian.component.scss","webpack:///./src/app/util/accordian/accordian.component.ts","webpack:///./src/app/util/color-picker/color-picker.component.html","webpack:///./src/app/util/color-picker/color-picker.component.scss","webpack:///./src/app/util/color-picker/color-picker.component.ts","webpack:///./src/app/util/colors.ts","webpack:///./src/app/util/confirm-cancel-dialog/confirm-cancel-dialog.component.html","webpack:///./src/app/util/confirm-cancel-dialog/confirm-cancel-dialog.component.scss","webpack:///./src/app/util/confirm-cancel-dialog/confirm-cancel-dialog.component.ts","webpack:///./src/app/util/dialog-wrapper/dialog-wrapper.component.html","webpack:///./src/app/util/dialog-wrapper/dialog-wrapper.component.scss","webpack:///./src/app/util/dialog-wrapper/dialog-wrapper.component.ts","webpack:///./src/app/util/download-link.ts","webpack:///./src/app/util/file-form/file-form.component.html","webpack:///./src/app/util/file-form/file-form.component.scss","webpack:///./src/app/util/file-form/file-form.component.ts","webpack:///./src/app/util/file-load-input/file-load-input.component.html","webpack:///./src/app/util/file-load-input/file-load-input.component.scss","webpack:///./src/app/util/file-load-input/file-load-input.component.ts","webpack:///./src/app/util/nes-tabs/child-panel/child-panel.component.html","webpack:///./src/app/util/nes-tabs/child-panel/child-panel.component.scss","webpack:///./src/app/util/nes-tabs/child-panel/child-panel.component.ts","webpack:///./src/app/util/nes-tabs/tabbed-panel/tabbed-panel.component.html","webpack:///./src/app/util/nes-tabs/tabbed-panel/tabbed-panel.component.scss","webpack:///./src/app/util/nes-tabs/tabbed-panel/tabbed-panel.component.ts","webpack:///./src/app/util/okay-dialog/okay-dialog.component.html","webpack:///./src/app/util/okay-dialog/okay-dialog.component.scss","webpack:///./src/app/util/okay-dialog/okay-dialog.component.ts","webpack:///./src/app/util/palette-display/palette-display.component.html","webpack:///./src/app/util/palette-display/palette-display.component.scss","webpack:///./src/app/util/palette-display/palette-display.component.ts","webpack:///./src/app/util/pixel-pending/pixel-pending.component.html","webpack:///./src/app/util/pixel-pending/pixel-pending.component.scss","webpack:///./src/app/util/pixel-pending/pixel-pending.component.ts","webpack:///./src/app/util/point.ts","webpack:///./src/app/util/range.ts","webpack:///./src/app/util/safe.pipe.ts","webpack:///./src/app/util/svg.ts","webpack:///./src/app/util/trigger.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {CobblestoneComponent} from \"./cobblestone/cobblestone.component\";\r\nimport {SpritelyComponent} from \"./spritely/spritely.component\";\r\nimport {MastermoldComponent} from \"./mastermold/mastermold.component\";\r\nimport {OutfitterComponent} from \"./outfitter/outfitter.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/outfitter', pathMatch: 'full' },\r\n  { path: 'cobblestone', component: CobblestoneComponent },\r\n  { path: 'outfitter', component: OutfitterComponent },\r\n  { path: 'mastermold', component: MastermoldComponent },\r\n  { path: 'spritely', component: SpritelyComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<header class=\\\"sticky\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-sm bg-primary navbar-dark\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><h2>{{title}}</h2></a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\" onclick=\\\"toggleDropDown('collapsibleNavbar')\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#/spritely\\\">Spritely</a>\\r\\n        </li>\\r\\n        <!--\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#/cobblestone\\\">CobbleStone</a>\\r\\n        </li>\\r\\n        -->\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#/mastermold\\\">MasterMold</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#/outfitter\\\">Outfitter</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<p></p>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<footer>\\r\\n  <div class=\\\"jumbotron text-center\\\" style=\\\"margin-bottom:0\\\">\\r\\n    <p>Built by Daniel Allen Johnson &copy; 2019 - 2020</p>\\r\\n    <p>Contact at <a href=\\\"https://twitter.com/voltron42\\\" target=\\\"_blank\\\">@voltron42</a> on Twitter.</p>\\r\\n    <p>See the code at <a href=\\\"https://github.com/scullery-plateau/carabiner\\\">scullery-plateau/carabiner</a> on GitHub.</p>\\r\\n  </div>\\r\\n</footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Scullery-Plateau';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CobblestoneComponent } from './cobblestone/cobblestone.component';\r\nimport { MastermoldComponent } from './mastermold/mastermold.component';\r\nimport { SpritelyComponent } from './spritely/spritely.component';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { PixelCanvasComponent } from './pixel-canvas/pixel-canvas.component';\r\nimport { PixelPainterComponent } from './pixel-painter/pixel-painter.component';\r\nimport { PalettesAndTilesComponent } from './cobblestone/palettes-and-tiles/palettes-and-tiles.component';\r\nimport { PaletteDisplayComponent } from './util/palette-display/palette-display.component';\r\nimport { DialogWrapperComponent } from './util/dialog-wrapper/dialog-wrapper.component';\r\nimport { AccordianComponent } from './util/accordian/accordian.component';\r\nimport { TransformedTilesComponent } from './cobblestone/transformed-tiles/transformed-tiles.component';\r\nimport { CobblestoneMapComponent } from './cobblestone/cobblestone-map/cobblestone-map.component';\r\nimport { MapPagePickerComponent } from './cobblestone/map-page-picker/map-page-picker.component';\r\nimport { TabbedPanelComponent } from './util/nes-tabs/tabbed-panel/tabbed-panel.component';\r\nimport { ChildPanelComponent } from './util/nes-tabs/child-panel/child-panel.component';\r\nimport { FileFormComponent } from './util/file-form/file-form.component';\r\nimport { FileLoadInputComponent } from './util/file-load-input/file-load-input.component';\r\nimport { PixelPendingComponent } from './util/pixel-pending/pixel-pending.component';\r\nimport { TransformedTileDefComponent } from './cobblestone/transformed-tile-def/transformed-tile-def.component';\r\nimport { TransformedTileDisplayComponent } from './cobblestone/transformed-tile-display/transformed-tile-display.component';\r\nimport { TransformedTileRefComponent } from './cobblestone/transformed-tile-ref/transformed-tile-ref.component';\r\nimport {HttpMockRequestInterceptor} from \"./mock/http-mock-request-interceptor\";\r\nimport { ConfirmCancelDialogComponent } from './util/confirm-cancel-dialog/confirm-cancel-dialog.component';\r\nimport { OkayDialogComponent } from './util/okay-dialog/okay-dialog.component';\r\nimport { ImageListComponent } from './mastermold/image-list/image-list.component';\r\nimport { MiniGalleryComponent } from './mastermold/mini-gallery/mini-gallery.component';\r\nimport { OutfitterComponent } from './outfitter/outfitter.component';\r\nimport { ColorPickerComponent } from './util/color-picker/color-picker.component';\r\nimport { OutfitterDisplayComponent } from './outfitter/outfitter-display/outfitter-display.component';\r\nimport { DisplayLayerComponent } from './outfitter/display-layer/display-layer.component';\r\nimport { SafePipe } from './util/safe.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CobblestoneComponent,\r\n    MastermoldComponent,\r\n    SpritelyComponent,\r\n    PixelCanvasComponent,\r\n    PixelPainterComponent,\r\n    PalettesAndTilesComponent,\r\n    PaletteDisplayComponent,\r\n    DialogWrapperComponent,\r\n    AccordianComponent,\r\n    TransformedTilesComponent,\r\n    CobblestoneMapComponent,\r\n    MapPagePickerComponent,\r\n    TabbedPanelComponent,\r\n    ChildPanelComponent,\r\n    FileFormComponent,\r\n    FileLoadInputComponent,\r\n    PixelPendingComponent,\r\n    TransformedTileDefComponent,\r\n    TransformedTileDisplayComponent,\r\n    TransformedTileRefComponent,\r\n    ConfirmCancelDialogComponent,\r\n    OkayDialogComponent,\r\n    ImageListComponent,\r\n    MiniGalleryComponent,\r\n    OutfitterComponent,\r\n    ColorPickerComponent,\r\n    OutfitterDisplayComponent,\r\n    DisplayLayerComponent,\r\n    SafePipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpMockRequestInterceptor,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst chars: string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789~!@#$%^&*()_+-=`;:'\\\"[]{}\\\\|,.<>/?\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharIndexService {\r\n\r\n  constructor() { }\r\n\r\n  getAll():string[] {\r\n    return chars.split(\"\");\r\n  }\r\n\r\n  getUnused(used:string):string[] {\r\n    return chars.split(\"\").filter((ch) => {\r\n      return (used.indexOf(ch) == -1);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {DownloadLink} from \"../util/download-link\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SpritelyData} from \"../spritely/spritely-data\";\r\nimport {CobblestoneData} from \"./model/cobblestone-data\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CobblestoneFileService {\r\n\r\n  downloader: DownloadLink = new DownloadLink();\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  parseLoadData(loadData: string): Observable<CobblestoneData> {\r\n    return this.client.post<CobblestoneData>(\"/cobblestone/load\",loadData);\r\n  }\r\n\r\n  downloadImage(saveData: CobblestoneData, scale: number, fileName: string): void {\r\n    this.client.post<String>(\"/cobblestone/save\",{\r\n      \"scale\":scale,\r\n      \"full-map\":saveData\r\n    }).subscribe((base64) => {\r\n      this.downloader.setFileName(fileName);\r\n      this.downloader.setPath(\"data:image/png;base64,\" + base64);\r\n      this.downloader.invokeDownload();\r\n    });\r\n  }\r\n\r\n  downloaddata(saveData: CobblestoneData, fileName: string): void {\r\n    this.client.post<String>(\"/cobblestone/save\",saveData).subscribe((rawdata) => {\r\n      this.downloader.setFileName(fileName);\r\n      this.downloader.setPath(\"data:text/plain;,\" + encodeURIComponent(rawdata.split(\"\\n\").join(\"\\r\\n\")));\r\n      this.downloader.invokeDownload();\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<tf-tile-def\\r\\n  [state]=\\\"state\\\"\\r\\n  [transformTrigger]=\\\"transformTrigger\\\"\\r\\n></tf-tile-def>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <div class=\\\"showcase\\\">\\r\\n      <div class=\\\"nes-container\\\">\\r\\n        <ng-container *ngIf=\\\"state.transforms\\\">\\r\\n          <ng-container *ngFor=\\\"let tf of state.transforms | keyvalue\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button (click)=\\\"select(tf.key)\\\">\\r\\n\\r\\n              </button>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-8\\\">\\r\\n    <div class=\\\"showcase\\\">\\r\\n      <div class=\\\"nes-container\\\">\\r\\n        <form [formGroup]=\\\"dimForm\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <label for=\\\"width\\\" class=\\\"text-brand\\\">Width:</label>\\r\\n              <input type=\\\"number\\\" min=\\\"8\\\" max=\\\"64\\\" id=\\\"width\\\" class=\\\"nes-input\\\" formControlName=\\\"width\\\" (change)=\\\"resize()\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <label for=\\\"height\\\" class=\\\"text-brand\\\">Height:</label>\\r\\n              <input type=\\\"number\\\" min=\\\"8\\\" max=\\\"64\\\" id=\\\"height\\\" class=\\\"nes-input\\\" formControlName=\\\"height\\\" (change)=\\\"resize()\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <label for=\\\"scale\\\" class=\\\"text-brand\\\">Scale:</label>\\r\\n              <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"4\\\" id=\\\"scale\\\" class=\\\"nes-input\\\" formControlName=\\\"scale\\\" (change)=\\\"resize()\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 map-frame\\\">\\r\\n            <svg\\r\\n              [attr.width]=\\\"dimForm.value.width * dimForm.value.scale * 16\\\"\\r\\n              [attr.height]=\\\"dimForm.value.height * dimForm.value.scale * 16\\\">\\r\\n              <ng-container *ngIf=\\\"state.map\\\">\\r\\n                <ng-container *ngFor=\\\"let y of range.max(dimForm.value.height)\\\">\\r\\n                  <ng-container *ngFor=\\\"let x of range.max(dimForm.value.width)\\\">\\r\\n                    <a href=\\\"#/cobblestone\\\" (click)=\\\"setTile(x,y)\\\">\\r\\n                      <rect [attr.href]=\\\"'url(#' + getTile(x,y) + ')'\\\"\\r\\n                            [attr.x]=\\\"x * dimForm.value.scale * 16\\\"\\r\\n                            [attr.y]=\\\"y * dimForm.value.scale * 16\\\"/>\\r\\n                    </a>\\r\\n                  </ng-container>\\r\\n                </ng-container>\\r\\n              </ng-container>\\r\\n            </svg>\\r\\n          </div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"map-frame {\\n  overflow: scroll;\\n  width: 100%;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29iYmxlc3RvbmUvY29iYmxlc3RvbmUtbWFwL0M6XFxVc2Vyc1xccG9zc2xfMDAwXFxEb2N1bWVudHNcXEdpdEh1YlxcY2FyYWJpbmVyXFxmcm9udC9zcmNcXGFwcFxcY29iYmxlc3RvbmVcXGNvYmJsZXN0b25lLW1hcFxcY29iYmxlc3RvbmUtbWFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb2JibGVzdG9uZS9jb2JibGVzdG9uZS1tYXAvY29iYmxlc3RvbmUtbWFwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFwLWZyYW1lIHtcclxuICBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Range } from \"../../util/range\";\r\nimport { Point } from \"../../util/point\";\r\nimport { Trigger } from \"../../util/trigger\";\r\n\r\n@Component({\r\n  selector: 'app-cobblestone-map',\r\n  templateUrl: './cobblestone-map.component.html',\r\n  styleUrls: ['./cobblestone-map.component.scss']\r\n})\r\nexport class CobblestoneMapComponent implements OnInit {\r\n\r\n  @Input()\r\n  state: any;\r\n\r\n  @Input()\r\n  scale: number;\r\n\r\n\r\n\r\n  dimForm: FormGroup = this.fb.group({\r\n    width:[8],\r\n    height:[10],\r\n    scale:[3]\r\n  });\r\n\r\n  activeKey: string;\r\n\r\n  range = Range;\r\n\r\n  @Input()\r\n  loadTrigger: Trigger;\r\n\r\n  @Input()\r\n  transformTrigger: Trigger;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateFromFile() {\r\n\r\n  }\r\n\r\n  select(key: string) {\r\n    this.activeKey = key;\r\n  }\r\n\r\n  setTile(x:number,y:number) {\r\n    let key = (new Point(x,y)).toString();\r\n    if (this.state.map[key]) {\r\n      delete this.state.map[key];\r\n    } else {\r\n      if (this.state.transforms[this.activeKey]) {\r\n        this.state.map[key] = this.activeKey;\r\n      }\r\n    }\r\n  }\r\n\r\n  getTile(x:number,y:number) {\r\n    let p = new Point(x,y);\r\n    return this.state.map[p.toString()] || \"bg\";\r\n  }\r\n\r\n  pixel(key:string, x:number,y:number) {\r\n    let tfTile = this.state.transforms[key];\r\n    let palette = tfTile.palette;\r\n    let tile = tfTile.tile;\r\n    let p = (new Point(x,y)).toString();\r\n    return palette[tile[p] || 0];\r\n  }\r\n\r\n  resize() {}\r\n}\r\n","module.exports = \"<div class=\\\"row\\\"><div class=\\\"col-1\\\"><p></p></div></div>\\r\\n<tabbed-panel\\r\\n  title=\\\"CobbleStone\\\"\\r\\n  activeClass=\\\"is-success\\\"\\r\\n  [initActiveIndex]=\\\"0\\\">\\r\\n  <tab-child label=\\\"File\\\">\\r\\n    <file-form\\r\\n      [defaultSaveFile]=\\\"defaultSaveFile\\\"\\r\\n      [prepareLoadedData]=\\\"fileLoadHandler()\\\"\\r\\n      [fileLoadCallback]=\\\"fileLoadCallback()\\\"\\r\\n      [invokeDownload]=\\\"dataDownloader()\\\">\\r\\n    </file-form>\\r\\n  </tab-child>\\r\\n  <tab-child label=\\\"Palettes &amp; Tiles\\\">\\r\\n    <app-palettes-and-tiles [state]=\\\"state\\\" [loadTrigger]=\\\"loadTrigger\\\"></app-palettes-and-tiles>\\r\\n  </tab-child>\\r\\n  <tab-child label=\\\"Transforms\\\">\\r\\n    <app-transformed-tiles\\r\\n      [state]=\\\"state\\\" [scale]=\\\"scale\\\"\\r\\n      [loadTrigger]=\\\"loadTrigger\\\"\\r\\n      [transformTrigger]=\\\"transformTrigger\\\"\\r\\n    ></app-transformed-tiles>\\r\\n  </tab-child>\\r\\n  <tab-child label=\\\"Map\\\">\\r\\n    <app-cobblestone-map [state]=\\\"state\\\" [scale]=\\\"scale\\\" [loadTrigger]=\\\"loadTrigger\\\"\\r\\n                         [transformTrigger]=\\\"transformTrigger\\\"></app-cobblestone-map>\\r\\n  </tab-child>\\r\\n  <!--\\r\\n  <tab-child label=\\\"Paging\\\">\\r\\n    <app-map-page-picker [state]=\\\"state\\\"></app-map-page-picker>\\r\\n  </tab-child>\\r\\n  -->\\r\\n</tabbed-panel>\\r\\n<div class=\\\"row\\\"><div class=\\\"col-1\\\"><p></p></div></div>\\r\\n\"","module.exports = \"@media screen {\\n  .print-cobblestone {\\n    display: none; } }\\n\\n@media print {\\n  footer {\\n    display: none; }\\n  .print-cobblestone {\\n    display: block; }\\n  tabbed-panel {\\n    display: none; }\\n  header {\\n    display: none; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29iYmxlc3RvbmUvQzpcXFVzZXJzXFxwb3NzbF8wMDBcXERvY3VtZW50c1xcR2l0SHViXFxjYXJhYmluZXJcXGZyb250L3NyY1xcYXBwXFxjb2JibGVzdG9uZVxcY29iYmxlc3RvbmUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTtJQUNFLGFBQWEsRUFBQSxFQUNkOztBQUdIO0VBQ0U7SUFDRSxhQUFhLEVBQUE7RUFFZjtJQUNFLGNBQWMsRUFBQTtFQUVoQjtJQUNFLGFBQWEsRUFBQTtFQUVmO0lBQ0UsYUFBYSxFQUFBLEVBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb2JibGVzdG9uZS9jb2JibGVzdG9uZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSBzY3JlZW4ge1xyXG4gIC5wcmludC1jb2JibGVzdG9uZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHByaW50IHtcclxuICBmb290ZXIgIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIC5wcmludC1jb2JibGVzdG9uZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbiAgdGFiYmVkLXBhbmVsIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGhlYWRlciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Trigger } from \"../util/trigger\"\r\nimport {Observable} from \"rxjs\";\r\nimport {SpritelyData} from \"../spritely/spritely-data\";\r\nimport {CobblestoneFileService} from \"./cobblestone-file.service\";\r\nimport {CobblestoneData} from \"./model/cobblestone-data\";\r\nimport {TileTransformerService} from \"./tile-transformer.service\";\r\nimport {TransformedTile} from \"./model/TransformedTile\";\r\nimport {CobblestoneAppState} from \"./model/cobblestone-app-state\";\r\n\r\n@Component({\r\n  selector: 'app-cobblestone',\r\n  templateUrl: './cobblestone.component.html',\r\n  styleUrls: ['./cobblestone.component.scss']\r\n})\r\nexport class CobblestoneComponent implements OnInit {\r\n\r\n  private state: CobblestoneAppState = new CobblestoneAppState();\r\n\r\n  loadTrigger: Trigger = new Trigger(\"on-file-load\");\r\n\r\n  transformTrigger: Trigger = new Trigger(\"on-transforms-updated\");\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private cfs: CobblestoneFileService,\r\n              private ttf: TileTransformerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  fileLoadHandler() {\r\n    let me = this;\r\n    return function(fileData): Observable<CobblestoneData> {\r\n      return me.cfs.parseLoadData(fileData);\r\n    }\r\n  }\r\n\r\n  fileLoadCallback() {\r\n    let me = this;\r\n    return function(json:CobblestoneData) {\r\n      me.state.loadData(json,me.ttf);\r\n      me.loadTrigger.fire();\r\n    }\r\n  }\r\n\r\n  saveData(): CobblestoneData {\r\n    return this.state.getData();\r\n  }\r\n\r\n  dataDownloader() {\r\n    let me = this;\r\n    return function(filename) {\r\n      me.cfs.downloaddata(me.saveData(),filename);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  map-page-picker works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvYmJsZXN0b25lL21hcC1wYWdlLXBpY2tlci9tYXAtcGFnZS1waWNrZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-map-page-picker',\r\n  templateUrl: './map-page-picker.component.html',\r\n  styleUrls: ['./map-page-picker.component.scss']\r\n})\r\nexport class MapPagePickerComponent implements OnInit {\r\n\r\n  @Input()\r\n  state: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Transform} from \"./transform\";\r\n\r\nexport class TransformedTile {\r\n  paletteName:string;\r\n  tileName:string;\r\n  transformations:string[];\r\n\r\n  unparse(): string {\r\n    var tfs = Object.values(Transform).filter((tf) => {\r\n      return this.transformations.indexOf(tf) >= 0;\r\n    });\r\n    tfs.sort();\r\n    return [this.tileName,this.paletteName].concat(tfs).join(\"_\");\r\n  }\r\n\r\n  static parse(key: string): TransformedTile {\r\n    let out = new TransformedTile();\r\n    let fields = key.split(\"_\");\r\n    out.tileName = fields[0];\r\n    out.paletteName = fields[1];\r\n    let tfs = fields.splice(2);\r\n    out.transformations = Object.values(Transform).filter((tf) => {\r\n      return tfs.indexOf(tf) >= 0;\r\n    });\r\n    return out;\r\n  }\r\n}\r\n","import {TransformedTile} from \"./TransformedTile\";\r\nimport {CobblestonePage} from \"./cobblestone-page\";\r\nimport {CobblestoneData} from \"./cobblestone-data\";\r\nimport {TileTransformerService} from \"../tile-transformer.service\";\r\nimport {Transform} from \"./transform\";\r\n\r\nexport class CobblestoneAppState {\r\n  palettes:Map<string,string[]> = new Map<string, string[]>();\r\n  tiles:Map<string,Map<string,number>> = new Map<string, Map<string, number>>()\r\n  mapping:Map<string,TransformedTile> = new Map<string, TransformedTile>();\r\n  transforms:Map<string,string> = new Map<string, string>();\r\n  map:Map<string,string> = new Map<string, string>();\r\n  paging:CobblestonePage[] = [];\r\n\r\n  public loadData(data: CobblestoneData, ttf: TileTransformerService) {\r\n    console.log(data);\r\n    this.palettes = new Map<string, string[]>();\r\n    Object.entries(data.palettes).forEach((entry) => {\r\n      this.palettes.set(entry[0],entry[1]);\r\n    });\r\n    this.tiles = new Map<string, Map<string, number>>();\r\n    Object.entries(data.tiles).forEach((entry) => {\r\n      this.tiles.set(entry[0],entry[1]);\r\n    });\r\n    this.mapping = new Map<string, TransformedTile>();\r\n    Object.entries(data.mapping).forEach((entry) => {\r\n      let tfTile: TransformedTile = new TransformedTile();\r\n      tfTile.tileName = entry[1][\"tile-name\"];\r\n      tfTile.paletteName = entry[1][\"palette-name\"];\r\n      console.log(entry);\r\n      let tfs = entry[1][\"transforms\"] || [];\r\n      console.log(tfs);\r\n      tfTile.transformations = Object.values(Transform).filter((tf:string) => {\r\n        return tfs.indexOf(tf) >= 0;\r\n      });\r\n      console.log(tfTile.transformations);\r\n      console.log(tfTile);\r\n      console.log(tfTile.unparse());\r\n      this.mapping.set(entry[0],tfTile);\r\n    });\r\n    this.map = new Map<string, string>();\r\n    Object.entries(data.map).forEach((entry) => {\r\n      this.map.set(entry[0],entry[1]);\r\n    });\r\n    this.paging = [];\r\n    data.paging.forEach((page) => {\r\n      this.paging.push(page)\r\n    });\r\n    this.mapping.forEach((mapping:TransformedTile,myChar:string) => {\r\n      mapping.transformations.sort();\r\n      let key = ttf.parseMappingToKey(mapping);\r\n      if (this.transforms.has(key)) {\r\n        let oldChar = this.transforms.get(key);\r\n        this.mapping.delete(oldChar);\r\n      }\r\n      this.transforms.set(key,myChar);\r\n    });\r\n    console.log(this);\r\n  }\r\n\r\n  public getData(): CobblestoneData {\r\n    let data: CobblestoneData = new CobblestoneData();\r\n    data.paging = this.paging;\r\n    data.palettes = this.palettes;\r\n    data.tiles = this.tiles;\r\n    data.map = this.map;\r\n    data.mapping = new Map<string, {\"palette-name\"?: string, \"tile-name\"?: string, transforms?: string[]}>();\r\n    this.mapping.forEach((tfTile:TransformedTile,myChar:string) => {\r\n      data.mapping.set(myChar,{\r\n        \"palette-name\":tfTile.paletteName,\r\n        \"tile-name\":tfTile.tileName,\r\n        \"transforms\":tfTile.transformations.map((tf) => tf)\r\n      });\r\n    });\r\n    return data;\r\n  }\r\n}\r\n","import {CobblestonePage} from \"./cobblestone-page\";\r\nimport {TransformedTile} from \"./TransformedTile\";\r\n\r\nexport class CobblestoneData {\r\n  palettes:Map<string,string[]>;\r\n  tiles:Map<string,Map<string,number>>;\r\n  mapping:Map<string,{\r\n    \"palette-name\"?:string,\r\n    \"tile-name\"?:string,\r\n    \"transforms\"?:string[]\r\n  }>;\r\n  map:Map<string,string>;\r\n  paging:CobblestonePage[];\r\n}\r\n","export enum Transform {\r\n  TurnLeft = \"turn-left\",\r\n  TurnRight = \"turn-right\",\r\n  FlipOver = \"flip-over\",\r\n  FlipDown = \"flip-down\",\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"paletteAndTileForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"showcase\\\">\\r\\n            <div class=\\\"nes-container with-title\\\">\\r\\n              <div class=\\\"title\\\">\\r\\n                <h6>Palettes</h6>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-5 text-right\\\">\\r\\n                  <label for=\\\"palettes\\\" class=\\\"text-brand\\\">Palettes: </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-7\\\">\\r\\n                  <div class=\\\"nes-input nes-select\\\">\\r\\n                    <select id=\\\"palettes\\\" class=\\\"form-control\\\" formControlName=\\\"selectedPalette\\\" (change)=\\\"selectPalette()\\\">\\r\\n                      <ng-container *ngIf=\\\"state.palettes\\\">\\r\\n                        <ng-container *ngFor=\\\"let palette of state.palettes | keyvalue\\\">\\r\\n                          <option value=\\\"{{palette.key}}\\\">{{palette.key}}</option>\\r\\n                        </ng-container>\\r\\n                      </ng-container>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 text-center\\\">\\r\\n                  <dialog-wrapper\\r\\n                    [triggerBtnName]=\\\"'Add Palette'\\\"\\r\\n                    [dialogConfirm]=\\\"paletteAdder()\\\"\\r\\n                    [dialogClose]=\\\"paletteDialogCloser()\\\">\\r\\n                    <label for=\\\"paletteName\\\">Palette Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"nes-input\\\" id=\\\"paletteName\\\" formControlName=\\\"paletteName\\\"/>\\r\\n                  </dialog-wrapper>\\r\\n                  <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"nes-btn is-error\\\" (click)=\\\"removePalette()\\\">Remove Palette</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-5 text-right\\\">\\r\\n                  <label for=\\\"colors\\\" class=\\\"text-brand\\\">Colors: </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-7\\\">\\r\\n                  <div class=\\\"nes-input nes-select\\\"><select id=\\\"colors\\\" class=\\\"form-control\\\" formControlName=\\\"selectedColor\\\" (change)=\\\"selectColor()\\\">\\r\\n                      <ng-container *ngFor=\\\"let color of activePalette; index as i\\\">\\r\\n                        <option value=\\\"{{i}}\\\">{{i}} - {{color||'Transparent'}}</option>\\r\\n                      </ng-container>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-5 text-right\\\">a\\r\\n                  <label for=\\\"color\\\" class=\\\"text-brand\\\">Color:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-7\\\">\\r\\n                  <input type=\\\"color\\\" id=\\\"color\\\" class=\\\"nes-input form-control\\\" formControlName=\\\"color\\\" value=\\\"#000001\\\" (change)=\\\"setColor()\\\"/>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 text-center\\\">\\r\\n                  <label for=\\\"makeTransparent\\\" class=\\\"text-brand\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"makeTransparent\\\" class=\\\"nes-checkbox\\\" formControlName=\\\"makeTransparent\\\" (change)=\\\"makeTransparent()\\\">\\r\\n                    <span>Make Transparent?</span>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 text-center\\\">\\r\\n                  <button class=\\\"nes-btn is-success\\\" (click)=\\\"addColor()\\\">Add Color</button>\\r\\n                  <button class=\\\"nes-btn is-error\\\" (click)=\\\"removeColor()\\\">Remove Color</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p></p>\\r\\n              <app-palette-display\\r\\n                [palette]=\\\"activePalette\\\"\\r\\n                href=\\\"#/cobblestone\\\"\\r\\n                showFirst=\\\"true\\\"\\r\\n                [selectFn]=\\\"colorIndexSetter()\\\"\\r\\n              ></app-palette-display>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"showcase\\\">\\r\\n            <div class=\\\"nes-container with-title\\\">\\r\\n              <div class=\\\"title\\\">\\r\\n                <h6>Tiles</h6>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-5 text-right\\\">\\r\\n                  <label for=\\\"selectedTile\\\">Active Tile</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-7\\\">\\r\\n                  <div class=\\\"nes-input nes-select\\\">\\r\\n                    <select class=\\\"form-control\\\" id=\\\"selectedTile\\\" formControlName=\\\"selectedTile\\\" (change)=\\\"selectTile()\\\">\\r\\n                      <ng-container *ngIf=\\\"state.tiles\\\">\\r\\n                        <ng-container *ngFor=\\\"let tile of state.tiles | keyvalue\\\">\\r\\n                          <option value=\\\"{{tile.key}}\\\">{{tile.key}}</option>\\r\\n                        </ng-container>\\r\\n                      </ng-container>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 text-center\\\">\\r\\n                  <dialog-wrapper\\r\\n                    [triggerBtnName]=\\\"'Add Tile'\\\"\\r\\n                    [dialogConfirm]=\\\"tileAdder()\\\"\\r\\n                    [dialogClose]=\\\"tileDialogCloser()\\\">\\r\\n                    <label for=\\\"tileName\\\">Tile Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"nes-input\\\" id=\\\"tileName\\\" formControlName=\\\"tileName\\\"/>\\r\\n                  </dialog-wrapper>\\r\\n                  <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"nes-btn is-error\\\" (click)=\\\"removeTile()\\\">Remove Tile</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n      <div class=\\\"showcase\\\">\\r\\n        <div class=\\\"nes-container with-title\\\">\\r\\n          <div class=\\\"title\\\">\\r\\n            <h5>Tile Canvas</h5>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-5 text-right\\\">\\r\\n              <label for=\\\"backgroundColor\\\" class=\\\"text-brand\\\">Background Color:</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"color\\\" id=\\\"backgroundColor\\\" class=\\\"nes-input form-control\\\" formControlName=\\\"backgroundColor\\\" value=\\\"#fffffe\\\" (change)=\\\"setBackground()\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <app-pixel-canvas\\r\\n                [pixels]=\\\"activeTile\\\"\\r\\n                [scale]=\\\"10\\\"\\r\\n                [width]=\\\"16\\\"\\r\\n                [height]=\\\"16\\\"\\r\\n                [palette]=\\\"activePalette\\\"\\r\\n                [backgroundColor]=\\\"getBackground()\\\"\\r\\n                [colorIndex]=\\\"activeColorIndex\\\"\\r\\n                page=\\\"cobblestone\\\"\\r\\n              ></app-pixel-canvas>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvYmJsZXN0b25lL3BhbGV0dGVzLWFuZC10aWxlcy9wYWxldHRlcy1hbmQtdGlsZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport {Trigger} from \"../../util/trigger\";\r\n\r\n@Component({\r\n  selector: 'app-palettes-and-tiles',\r\n  templateUrl: './palettes-and-tiles.component.html',\r\n  styleUrls: ['./palettes-and-tiles.component.scss']\r\n})\r\nexport class PalettesAndTilesComponent implements OnInit {\r\n\r\n  @Input()\r\n  state: any;\r\n\r\n  @Input()\r\n  scale: number;\r\n\r\n  activePalette: string[];\r\n\r\n  activeColorIndex: 0;\r\n\r\n  activeTile: {};\r\n\r\n  private paletteAndTileForm: FormGroup = this.fb.group({\r\n    selectedPalette:[''],\r\n    paletteName:[''],\r\n    selectedColor:[''],\r\n    color:['#000001'],\r\n    makeTransparent:[false],\r\n    tileName:[''],\r\n    selectedTile:[''],\r\n    backgroundColor:['#fffffe']\r\n  });\r\n\r\n  trigger: Trigger = new Trigger(\"redraw-tile\");\r\n\r\n  @Input()\r\n  loadTrigger: Trigger;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    let me = this;\r\n    this.loadTrigger.addListener(() => {\r\n      me.updateFromFile();\r\n    })\r\n  }\r\n\r\n  updateFromFile() {\r\n    let patch: {} = {};\r\n    let paletteNames = this.state.palettes.keys();\r\n    if (paletteNames.length > 0) {\r\n      patch[\"selectedPalette\"] = paletteNames[0];\r\n    }\r\n    let tileNames = this.state.tiles.keys();\r\n    if (tileNames.length > 0) {\r\n      patch[\"selectedTile\"] = tileNames[0];\r\n    }\r\n    this.paletteAndTileForm.patchValue(patch);\r\n    this.selectPalette();\r\n    this.selectTile();\r\n  }\r\n\r\n  tileDialogCloser() {\r\n    let form = this.paletteAndTileForm;\r\n    return function() {\r\n      form.patchValue({\r\n        tileName:''\r\n      });\r\n    }\r\n  }\r\n\r\n  tileAdder() {\r\n    let me = this;\r\n    return function() {\r\n      if (me.paletteAndTileForm.value.tileName && !me.state.tiles[me.paletteAndTileForm.value.tileName]) {\r\n        me.state.tiles[me.paletteAndTileForm.value.tileName] = {};\r\n        me.paletteAndTileForm.patchValue({\r\n          selectedTile:me.paletteAndTileForm.value.tileName\r\n        });\r\n        me.activeTile = me.state.tiles[me.paletteAndTileForm.value.tileName];\r\n      }\r\n    }\r\n  }\r\n\r\n  paletteDialogCloser() {\r\n    let form = this.paletteAndTileForm;\r\n    return function() {\r\n      form.patchValue({\r\n        selectedPalette:form.value.paletteName,\r\n        paletteName:''\r\n      });\r\n    }\r\n  }\r\n\r\n  paletteAdder() {\r\n    let me = this;\r\n    return function() {\r\n      if (me.paletteAndTileForm.value.paletteName && !me.state.palettes[me.paletteAndTileForm.value.paletteName]) {\r\n        me.state.palettes[me.paletteAndTileForm.value.paletteName] = [];\r\n        me.paletteAndTileForm.patchValue({\r\n          selectedPalette:me.paletteAndTileForm.value.paletteName\r\n        });\r\n        me.activePalette = me.state.palettes[me.paletteAndTileForm.value.paletteName];\r\n      }\r\n    }\r\n  }\r\n\r\n  selectPalette() {\r\n    this.activePalette = this.state.palettes.get(this.paletteAndTileForm.value.selectedPalette);\r\n  }\r\n\r\n  removePalette() {\r\n    if (this.activePalette) {\r\n      delete this.state.palettes[this.paletteAndTileForm.value.selectedPalette];\r\n      this.activePalette = undefined;\r\n    }\r\n  }\r\n\r\n  selectColor() {\r\n    if (this.activePalette) {\r\n      this.activeColorIndex = this.paletteAndTileForm.value.selectedColor;\r\n      this.paletteAndTileForm.patchValue({\r\n        color:this.activePalette[this.activeColorIndex]\r\n      });\r\n    }\r\n  }\r\n\r\n  colorIndexSetter() {\r\n    let me = this;\r\n    return function(index) {\r\n      me.paletteAndTileForm.patchValue({\r\n        selectedColor:index,\r\n      });\r\n      me.selectColor();\r\n    }\r\n  }\r\n\r\n  setColor() {\r\n    if (this.activePalette) {\r\n      if (this.activeColorIndex >= 0) {\r\n        this.activePalette[this.activeColorIndex] = this.paletteAndTileForm.value.color;\r\n      }\r\n    }\r\n  }\r\n\r\n  makeTransparent() {\r\n    if (this.activePalette) {\r\n      if (this.activeColorIndex >= 0) {\r\n        this.activePalette[this.activeColorIndex] = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  addColor() {\r\n    if (this.activePalette) {\r\n      this.activePalette.push(this.paletteAndTileForm.value.color);\r\n      this.paletteAndTileForm.patchValue({\r\n        selectedColor:(this.activePalette.length - 1)\r\n      })\r\n      this.selectColor();\r\n    }\r\n  }\r\n\r\n  removeColor() {\r\n    if (this.activePalette) {\r\n      if (this.activeColorIndex >= 0) {\r\n        this.activePalette.splice(this.activeColorIndex,1);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectTile() {\r\n    this.activeTile = this.state.tiles.get(this.paletteAndTileForm.value.selectedTile);\r\n  }\r\n\r\n  removeTile() {\r\n    if (this.activeTile) {\r\n      delete this.state.tiles[this.paletteAndTileForm.value.selectedTile];\r\n    }\r\n  }\r\n\r\n  getBackground() {\r\n    if (this.activePalette && this.activePalette[0]) {\r\n      return this.activePalette[0];\r\n    }\r\n    return this.paletteAndTileForm.value.backgroundColor;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Point } from '../util/point';\r\nimport {Transform} from \"./model/transform\";\r\nimport {TransformedTile} from \"./model/TransformedTile\";\r\n\r\nconst tfs: {} = {\r\n  \"turn-left\":\"turnLeft\",\r\n  \"turn-right\":\"turnRight\",\r\n  \"flip-down\":\"flipDown\",\r\n  \"flip-over\":\"flipOver\"\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TileTransformerService {\r\n\r\n  constructor() { }\r\n\r\n  parseMappingToKey(tfTile:TransformedTile): string {\r\n    var tfs = Object.values(Transform).filter((tf) => {\r\n      return tfTile.transformations.indexOf(tf) >= 0;\r\n    });\r\n    tfs.sort();\r\n    return [tfTile.tileName,tfTile.paletteName].concat(tfs).join(\"_\");\r\n  }\r\n\r\n  parseKeyToForm(key: string): {} {\r\n    let tile = TransformedTile.parse(key);\r\n    let out: {\r\n      selectedPalette?:string,\r\n      selectedTile?:string,\r\n      \"flip-over\"?:boolean,\r\n      \"flip-down\"?:boolean,\r\n      \"turn-right\"?:boolean,\r\n      \"turn-left\"?:boolean\r\n    } = {};\r\n    out.selectedPalette = tile.paletteName;\r\n    out.selectedTile = tile.tileName;\r\n    Object.values(Transform).forEach(tf => {\r\n      out[tf] = (tile.transformations.indexOf(tf) >= 0);\r\n    });\r\n    return out;\r\n  }\r\n\r\n  printFormKey(formValue: {\r\n    selectedPalette?:string,\r\n    selectedTile?:string,\r\n    \"flip-over\"?:boolean,\r\n    \"flip-down\"?:boolean,\r\n    \"turn-right\"?:boolean,\r\n    \"turn-left\"?:boolean\r\n  } = {}): string {\r\n    var tfs = Object.values(Transform).filter((tf) => {\r\n      return formValue[tf];\r\n    });\r\n    tfs.sort();\r\n    return [formValue.selectedTile,formValue.selectedPalette].concat(tfs).join(\"_\");\r\n  }\r\n\r\n  buildTransformedTile(state: any, key: string) {\r\n    console.log(\"building tracking\");\r\n    if (state.transforms) {\r\n      let myChar = state.transforms.get(key);\r\n      console.log(\"my char\");\r\n      console.log(myChar);\r\n      if (myChar) {\r\n        let tf:{\r\n          key:string,\r\n          bg?:string,\r\n          pixels:{\r\n            x:number,\r\n            y:number,\r\n            fill:string\r\n          }[]\r\n        } = {\r\n          key:key,\r\n          pixels:[]\r\n        };\r\n        let mapping:TransformedTile = state.mapping.get(myChar);\r\n        console.log(mapping);\r\n        let palette:string[] = state.palettes.get(mapping.paletteName);\r\n        console.log(palette);\r\n        let tile:any = state.tiles.get(mapping.tileName);\r\n        console.log(tile);\r\n        if (palette && tile) {\r\n          if (palette[0]) {\r\n            tf.bg = palette[0];\r\n          }\r\n          Object.entries(tile).forEach((entry) => {\r\n            let coord: string = entry[0];\r\n            let colorIndex:any = entry[1];\r\n            let point = mapping.transformations.reduce((p,tf) => {\r\n              return p[tfs[tf]](16,16);\r\n            },Point.parse(coord));\r\n            let pixel:{\r\n              x:number,\r\n              y:number,\r\n              fill:string\r\n            } = {\r\n              x:point.x,\r\n              y:point.y,\r\n              fill:palette[colorIndex]\r\n            };\r\n            tf.pixels.push(pixel);\r\n          });\r\n          console.log(tf);\r\n          return tf;\r\n        }\r\n      }\r\n      console.log()\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<svg width=\\\"0\\\" height=\\\"0\\\">\\r\\n  <defs>\\r\\n    <ng-container *ngFor=\\\"let tf of currentTransforms\\\">\\r\\n      <pattern [attr.id]=\\\"tf.key\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"1\\\">\\r\\n        <rect *ngIf=\\\"tf.bg\\\" width=\\\"16\\\" height=\\\"16\\\"\\r\\n              [attr.fill]=\\\"tf.bg\\\" stroke=\\\"none\\\" stroke-width=\\\"0\\\"></rect>\\r\\n        <ng-container *ngFor=\\\"let pixel of tf.pixels\\\">\\r\\n          <rect\\r\\n            [attr.alt]=\\\"pixel.x + 'x' + pixel.y\\\"\\r\\n            [attr.x]=\\\"pixel.x\\\"\\r\\n            [attr.y]=\\\"pixel.y\\\"\\r\\n            [attr.width]=\\\"1\\\"\\r\\n            [attr.height]=\\\"1\\\"\\r\\n            [attr.fill]=\\\"pixel.fill\\\"\\r\\n            style=\\\"stroke:none;stroke-width:0;\\\"></rect>\\r\\n        </ng-container>\\r\\n      </pattern>\\r\\n    </ng-container>\\r\\n  </defs>\\r\\n</svg>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvYmJsZXN0b25lL3RyYW5zZm9ybWVkLXRpbGUtZGVmL3RyYW5zZm9ybWVkLXRpbGUtZGVmLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TransformedTile} from \"../model/TransformedTile\";\r\nimport {Range} from \"../../util/range\";\r\nimport {Trigger} from \"../../util/trigger\";\r\nimport {Point} from \"../../util/point\";\r\nimport {TileTransformerService} from \"../tile-transformer.service\";\r\n\r\n@Component({\r\n  selector: 'tf-tile-def',\r\n  templateUrl: './transformed-tile-def.component.html',\r\n  styleUrls: ['./transformed-tile-def.component.scss']\r\n})\r\nexport class TransformedTileDefComponent implements OnInit {\r\n\r\n  @Input()\r\n  state: any;\r\n\r\n  @Input()\r\n  transformTrigger: Trigger;\r\n\r\n  currentTransforms: {\r\n    key:string,\r\n    bg?:string,\r\n    pixels:{\r\n      x:number,\r\n      y:number,\r\n      fill:string\r\n    }[]\r\n  }[] = [];\r\n\r\n\r\n  constructor(private ttf :TileTransformerService) { }\r\n\r\n  ngOnInit() {\r\n    let me = this;\r\n    this.transformTrigger.addListener(() => {\r\n      me.updateTransforms();\r\n    })\r\n  }\r\n\r\n  updateTransforms() {\r\n    this.currentTransforms = [];\r\n    this.state.transforms.forEach((v:string,k:string) => {\r\n      let tf:any = this.ttf.buildTransformedTile(this.state,k);\r\n      if (tf) {\r\n        this.currentTransforms.push(tf);\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<svg *ngIf=\\\"tf\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\">\\r\\n  <rect *ngIf=\\\"tf.bg\\\" width=\\\"16\\\" height=\\\"16\\\"\\r\\n        [attr.fill]=\\\"tf.bg\\\" stroke=\\\"none\\\" stroke-width=\\\"0\\\"></rect>\\r\\n  <ng-container *ngFor=\\\"let pixel of tf.pixels\\\">\\r\\n    <rect\\r\\n      [attr.alt]=\\\"pixel.x + 'x' + pixel.y\\\"\\r\\n      [attr.x]=\\\"pixel.x\\\"\\r\\n      [attr.y]=\\\"pixel.y\\\"\\r\\n      [attr.width]=\\\"1\\\"\\r\\n      [attr.height]=\\\"1\\\"\\r\\n      [attr.fill]=\\\"pixel.fill\\\"\\r\\n      style=\\\"stroke:none;stroke-width:0;\\\"></rect>\\r\\n  </ng-container>\\r\\n</svg>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvYmJsZXN0b25lL3RyYW5zZm9ybWVkLXRpbGUtZGlzcGxheS90cmFuc2Zvcm1lZC10aWxlLWRpc3BsYXkuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-tile-disp',\r\n  templateUrl: './transformed-tile-display.component.html',\r\n  styleUrls: ['./transformed-tile-display.component.scss']\r\n})\r\nexport class TransformedTileDisplayComponent implements OnInit {\r\n\r\n  @Input()\r\n  tf: {\r\n    key:string,\r\n    bg?:string,\r\n    pixels:{\r\n      x:number,\r\n      y:number,\r\n      fill:string\r\n    }[]\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\">\\r\\n  <rect height=\\\"16\\\" width=\\\"16\\\" stroke=\\\"none\\\" [attr.fill]=\\\"'url(#' + key + ')'\\\"></rect>\\r\\n</svg>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvYmJsZXN0b25lL3RyYW5zZm9ybWVkLXRpbGUtcmVmL3RyYW5zZm9ybWVkLXRpbGUtcmVmLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-tile-ref',\r\n  templateUrl: './transformed-tile-ref.component.html',\r\n  styleUrls: ['./transformed-tile-ref.component.scss']\r\n})\r\nexport class TransformedTileRefComponent implements OnInit {\r\n\r\n  @Input()\r\n  key: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <div class=\\\"showcase\\\">\\r\\n      <div class=\\\"nes-container\\\">\\r\\n        <form [formGroup]=\\\"transForm\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\" *ngIf=\\\"currentKey\\\">\\r\\n              <tf-tile-disp [tf]=\\\"buildTile(currentKey)\\\"></tf-tile-disp>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button class=\\\"nes-btn {{exists()?'is-error':'is-success'}}\\\" (click)=toggle()>{{exists()?'Remove':'Add'}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"chars\\\" class=\\\"text-brand\\\">Chars: </label>\\r\\n              <div class=\\\"nes-input nes-select\\\">\\r\\n                <select id=\\\"chars\\\" class=\\\"form-control\\\" formControlName=\\\"selectedChar\\\">\\r\\n                  <ng-container *ngFor=\\\"let aChar of unusedChars\\\">\\r\\n                    <option value=\\\"{{aChar}}\\\">{{aChar}}</option>\\r\\n                  </ng-container>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"palettes\\\" class=\\\"text-brand\\\">Palettes: </label>\\r\\n              <div class=\\\"nes-input nes-select\\\">\\r\\n                <select id=\\\"palettes\\\" class=\\\"form-control\\\" formControlName=\\\"selectedPalette\\\" (change)=\\\"updateCurrentKey()\\\">\\r\\n                  <ng-container *ngIf=\\\"state.palettes\\\">\\r\\n                    <ng-container *ngFor=\\\"let palette of state.palettes | keyvalue\\\">\\r\\n                      <option value=\\\"{{palette.key}}\\\">{{palette.key}}</option>\\r\\n                    </ng-container>\\r\\n                  </ng-container>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"selectedTile\\\">Tiles:</label>\\r\\n              <div class=\\\"nes-input nes-select\\\">\\r\\n                <select class=\\\"form-control\\\" id=\\\"selectedTile\\\" formControlName=\\\"selectedTile\\\" (change)=\\\"updateCurrentKey()\\\">\\r\\n                  <ng-container *ngIf=\\\"state.tiles\\\">\\r\\n                    <ng-container *ngFor=\\\"let tile of state.tiles | keyvalue\\\">\\r\\n                      <option value=\\\"{{tile.key}}\\\">{{tile.key}}</option>\\r\\n                    </ng-container>\\r\\n                  </ng-container>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div id=\\\"radio-flip-over\\\" class=\\\"item\\\">\\r\\n                <label>Flip Over</label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"flip-over\\\" formControlName=\\\"flip-over\\\" value=\\\"flip-over\\\" (change)=\\\"updateCurrentKey()\\\"/><span>Yes</span></label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"flip-over\\\" formControlName=\\\"flip-over\\\" value=\\\"\\\" (change)=\\\"updateCurrentKey()\\\"/><span>No</span></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div id=\\\"radio-flip-down\\\" class=\\\"item\\\">\\r\\n                <label>Flip Down</label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"flip-down\\\" formControlName=\\\"flip-down\\\" value=\\\"flip-down\\\" (change)=\\\"updateCurrentKey()\\\"/><span>Yes</span></label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"flip-down\\\" formControlName=\\\"flip-down\\\" value=\\\"\\\" (change)=\\\"updateCurrentKey()\\\"/><span>No</span></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div id=\\\"radio-turn-right\\\" class=\\\"item\\\">\\r\\n                <label>Turn Right</label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"turn-right\\\" formControlName=\\\"turn-right\\\" value=\\\"turn-right\\\" (change)=\\\"updateCurrentKey()\\\"/><span>Yes</span></label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"turn-right\\\" formControlName=\\\"turn-right\\\" value=\\\"\\\" (change)=\\\"updateCurrentKey()\\\"/><span>No</span></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div id=\\\"radio-turn-left\\\" class=\\\"item\\\">\\r\\n                <label>Turn Left</label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"turn-left\\\" formControlName=\\\"turn-left\\\" value=\\\"turn-left\\\" (change)=\\\"updateCurrentKey()\\\"/><span>Yes</span></label>\\r\\n                <label><input type=\\\"radio\\\" class=\\\"nes-radio\\\" name=\\\"turn-left\\\" formControlName=\\\"turn-left\\\" value=\\\"\\\" (change)=\\\"updateCurrentKey()\\\"/><span>No</span></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-8\\\">\\r\\n    <div class=\\\"showcase\\\">\\r\\n      <div class=\\\"nes-container\\\">\\r\\n        <ng-container *ngIf=\\\"state.transforms\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <ng-container *ngFor=\\\"let tf of state.transforms | keyvalue\\\">\\r\\n              <div class=\\\"col-3\\\" >\\r\\n                <button (click)=\\\"setCurrentKey(tf.key)\\\">\\r\\n                  <tf-tile-disp [tf]=\\\"buildTile(tf.key)\\\"></tf-tile-disp>\\r\\n                </button>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvYmJsZXN0b25lL3RyYW5zZm9ybWVkLXRpbGVzL3RyYW5zZm9ybWVkLXRpbGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { TileTransformerService } from '../tile-transformer.service'\r\nimport { Trigger } from \"../../util/trigger\";\r\nimport {Transform} from \"../model/transform\";\r\nimport {CharIndexService} from \"../char-index.service\";\r\nimport {TransformedTile} from \"../model/TransformedTile\";\r\n\r\n@Component({\r\n  selector: 'app-transformed-tiles',\r\n  templateUrl: './transformed-tiles.component.html',\r\n  styleUrls: ['./transformed-tiles.component.scss']\r\n})\r\nexport class TransformedTilesComponent implements OnInit {\r\n\r\n  @Input()\r\n  state: any;\r\n\r\n  @Input()\r\n  scale: number;\r\n\r\n  unusedChars:string[];\r\n\r\n  transForm: FormGroup = this.fb.group({\r\n    selectedChar:[''],\r\n    selectedPalette:[''],\r\n    selectedTile:[''],\r\n    \"flip-over\":[''],\r\n    \"flip-down\":[''],\r\n    \"turn-right\":[''],\r\n    \"turn-left\":['']\r\n  });\r\n\r\n  @Input()\r\n  loadTrigger: Trigger;\r\n\r\n  @Input()\r\n  transformTrigger: Trigger;\r\n\r\n  currentKey: string;\r\n\r\n  selectedPalette: string[];\r\n\r\n  selectedTile: any;\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private ttf: TileTransformerService,\r\n              private cis: CharIndexService) { }\r\n\r\n  ngOnInit() {\r\n    let me = this;\r\n    this.loadTrigger.addListener(() => {\r\n      me.updateFromFile();\r\n      me.transformTrigger.fire();\r\n    });\r\n    this.transformTrigger.addListener(() => {\r\n      let tmp = [];\r\n      me.state.transforms.forEach((v,k) => {\r\n        tmp.push(v);\r\n      });\r\n      me.unusedChars = me.cis.getUnused(tmp.join(\"\"));\r\n    })\r\n  }\r\n\r\n  updateFromFile() {\r\n    let patch: {} = {};\r\n    let paletteNames:string[] = [];\r\n    this.state.palettes.forEach((v,k) => paletteNames.push(k));\r\n    if (paletteNames.length > 0) {\r\n      patch[\"selectedPalette\"] = paletteNames[0];\r\n    }\r\n    let tileNames:string[] = [];\r\n    this.state.tiles.forEach((v,k) => tileNames.push(k));\r\n    if (tileNames.length > 0) {\r\n      patch[\"selectedTile\"] = tileNames[0];\r\n    }\r\n    this.transForm.patchValue(patch);\r\n    this.updateCurrentKey();\r\n  }\r\n\r\n  updateCurrentKey() {\r\n    this.setCurrentKey(this.ttf.printFormKey(this.transForm.value));\r\n  }\r\n\r\n  setCurrentKey(key: string) {\r\n    this.currentKey = key;\r\n    this.transForm.patchValue(this.ttf.parseKeyToForm(key));\r\n    this.selectedPalette = this.state.palettes[this.transForm.value.selectedPalette];\r\n    this.selectedTile = this.state.palettes[this.transForm.value.selectedTile];\r\n  }\r\n\r\n  buildTile(key: string): any {\r\n    return this.ttf.buildTransformedTile(this.state,key);\r\n  }\r\n\r\n  exists() {\r\n    if (this.currentKey) {\r\n      return this.state.transforms[this.currentKey];\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    let key = this.currentKey;\r\n    if (key && this.state.transforms[key]) {\r\n      let myChar = this.state.transforms[key];\r\n      delete this.state.transforms[key];\r\n      delete this.state.mapping[myChar];\r\n    } else {\r\n      this.state.transforms[key] = this.transForm.value.selectedChar;\r\n      this.state.mapping[this.transForm.value.selectedChar] = TransformedTile.parse(this.ttf.printFormKey(this.transForm.value));\r\n    }\r\n    this.transformTrigger.fire();\r\n  }\r\n}\r\n","export class CountUpdate {\r\n  filename:string;\r\n  count:number;\r\n}\r\n","module.exports = \"<div class=\\\"d-flex flex-column\\\">\\r\\n  <ng-container *ngFor=\\\"let mini of data\\\">\\r\\n    <div class=\\\"d-flex\\\">\\r\\n      <div class=\\\"p-2 w-100 text-right\\\">{{mini.filename}}</div>\\r\\n      <div class=\\\"p-2\\\"><input type=\\\"number\\\" min=\\\"1\\\" value=\\\"1\\\" class=\\\"nes-input\\\" (change)=\\\"updateCount($event,mini.filename)\\\"/></div>\\r\\n      <div class=\\\"p-2\\\"><button class=\\\"nes-btn is-error\\\" (click)=\\\"removeImage(mini.filename)\\\">X</button></div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlcm1vbGQvaW1hZ2UtbGlzdC9pbWFnZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Mini} from \"../mini\";\r\nimport {CountUpdate} from \"../count-update\";\r\n\r\n@Component({\r\n  selector: 'image-list',\r\n  templateUrl: './image-list.component.html',\r\n  styleUrls: ['./image-list.component.scss']\r\n})\r\nexport class ImageListComponent implements OnInit {\r\n\r\n  @Input()\r\n  data: Mini[];\r\n\r\n  @Output()\r\n  countUpdated = new EventEmitter<CountUpdate>();\r\n\r\n  @Output()\r\n  imageRemoved = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateCount(e: Event, filename: string) {\r\n    let target = e.target as HTMLInputElement;\r\n    let update = new CountUpdate();\r\n    update.count = parseInt(target.value);\r\n    update.filename = filename;\r\n    this.countUpdated.emit(update);\r\n  }\r\n\r\n  removeImage(filename: string) {\r\n    this.imageRemoved.emit(filename);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"d-flex flex-column\\\">\\r\\n  <label class=\\\"nes-btn\\\">\\r\\n    <span>Select your file</span>\\r\\n    <input type=\\\"file\\\" id=\\\"fileInput\\\" style=\\\"display: none;\\\" (change)=\\\"addImage($event)\\\">\\r\\n  </label>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"data\\\">\\r\\n    <div class=\\\"col-md-5 showcase\\\" id=\\\"ctrl\\\">\\r\\n      <div class=\\\"nes-container\\\">\\r\\n        <image-list\\r\\n          [data]=\\\"data\\\"\\r\\n          (countUpdated)=\\\"updateCount($event)\\\"\\r\\n          (imageRemoved)=\\\"deleteImage($event)\\\"></image-list>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7 showcase h-100\\\">\\r\\n      <div class=\\\"nes-container h-100\\\">\\r\\n        <button class=\\\"nes-btn\\\" (click)=\\\"publish()\\\">Publish</button>\\r\\n        <p></p>\\r\\n        <mini-gallery [data]=\\\"data\\\"></mini-gallery>\\r\\n        <p></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlcm1vbGQvbWFzdGVybW9sZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Mini} from \"./mini\";\r\nimport {PublishMinisService} from \"./publish-minis.service\";\r\nimport {CountUpdate} from \"./count-update\";\r\n\r\n@Component({\r\n  selector: 'app-mastermold',\r\n  templateUrl: './mastermold.component.html',\r\n  styleUrls: ['./mastermold.component.scss']\r\n})\r\nexport class MastermoldComponent implements OnInit {\r\n\r\n  private images: Map<String,Mini> = new Map<String, Mini>();\r\n\r\n  private data : Mini[] = [];\r\n\r\n  constructor(private pubService: PublishMinisService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateData() {\r\n    this.data = Array.from(this.images.values());\r\n  }\r\n\r\n  updateCount(update:CountUpdate) {\r\n    this.images.get(update.filename).count = update.count;\r\n    this.updateData();\r\n  }\r\n\r\n  deleteImage(filename: string) {\r\n    this.images.delete(filename);\r\n    this.updateData();\r\n  }\r\n\r\n  addImage(e) {\r\n    let files = Array.from(e.target.files);\r\n    let countdown : {} = files.reduce((out : {},file : File) => {\r\n      out[file.name] = true;\r\n      return out;\r\n    },{});\r\n    console.log(files);\r\n    let me = this;\r\n    if (files.length > 0) {\r\n      files.forEach((file : File) => {\r\n        let reader = new FileReader();\r\n        reader.onload = function() {\r\n          let mini = new Mini();\r\n          mini.filename = file.name;\r\n          mini.count = 1;\r\n          mini.url = reader.result.toString();\r\n          me.images.set(file.name,mini);\r\n          delete countdown[file.name];\r\n          if (Object.entries(countdown).length == 0) {\r\n            me.updateData();\r\n          }\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n  }\r\n\r\n  publish() {\r\n    this.pubService.buildMinis(Array.from(this.images.values())).subscribe((resp) => {\r\n      let html : string = resp.body;\r\n      console.log(html);\r\n      let w = window.open(\"\", \"_blank\");\r\n      w.document.write(html);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<ng-container *ngFor=\\\"let image of data\\\">\\r\\n  <ng-container *ngFor=\\\"let mini of repeat(image)\\\">\\r\\n    <span title=\\\"{{mini.filename}}\\\">\\r\\n      <svg [attr.width]=\\\"20 * scale\\\" [attr.height]=\\\"30 * scale\\\" [attr.viewBox]=\\\"'0 0 ' + (20 * scale) + ' ' + (30 * scale)\\\">\\r\\n        <rect x=\\\"0\\\" y=\\\"0\\\" [attr.width]=\\\"20 * scale\\\" [attr.height]=\\\"30 * scale\\\" fill=\\\"none\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\"/>\\r\\n        <image [attr.href]=\\\"mini.url\\\" [attr.x]=\\\"0\\\" [attr.y]=\\\"0\\\" [attr.width]=\\\"20 * scale\\\" [attr.height]=\\\"30 * scale\\\"/>\\r\\n      </svg>\\r\\n    </span>\\r\\n  </ng-container>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlcm1vbGQvbWluaS1nYWxsZXJ5L21pbmktZ2FsbGVyeS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Mini} from \"../mini\";\r\n\r\n@Component({\r\n  selector: 'mini-gallery',\r\n  templateUrl: './mini-gallery.component.html',\r\n  styleUrls: ['./mini-gallery.component.scss']\r\n})\r\nexport class MiniGalleryComponent implements OnInit {\r\n\r\n  @Input()\r\n  private data: Mini[];\r\n\r\n  private scale = 5;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  repeat(mini:Mini) {\r\n    return Array(mini.count).fill(mini);\r\n  }\r\n\r\n}\r\n","export class Mini {\r\n  filename: string;\r\n  url: string;\r\n  count: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Mini} from \"./mini\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpResponse} from \"@angular/common/http/src/response\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PublishMinisService {\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  buildMinis(minis: Mini[]) : Observable<HttpResponse<string>> {\r\n    console.log(minis);\r\n    console.log(JSON.stringify(minis));\r\n    return this.client.post(\"/mastermold/publish\",minis,{ observe: 'response', responseType: 'text' });\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from \"@angular/common/http\";\r\nimport {Observable, of, throwError} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {MOCK_RESPONSES} from \"./mock-responses\";\r\n\r\nexport const isMock = environment.mock;\r\n\r\nexport class HttpMockRequestInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (isMock) {\r\n      console.log(\"intercepted\");\r\n      console.log(\"url in question: \" + req.url);\r\n      for (const mock of MOCK_RESPONSES) {\r\n        console.log(\"mock.path: \" + mock.path);\r\n        const regex = new RegExp(mock.path,\"g\");\r\n        if (regex.test(req.url)) {\r\n          console.log('Loaded from json : ' + req.url);\r\n          if(mock.status >= 400) {\r\n            return throwError(mock.body);\r\n          } else {\r\n            return of(new HttpResponse({\r\n              status:mock.status||200,\r\n              body:(mock.body as any)\r\n            }));\r\n          }\r\n        }\r\n      }\r\n      console.log('Cannot locate mock for url: ' + req.url);\r\n      return of(new HttpResponse({\r\n        status:500,\r\n        body:([] as any)\r\n      }));\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import {MockResponse} from \"./mock-response\";\r\n\r\nexport const MOCK_RESPONSES: MockResponse[] = [\r\n  {\r\n    \"path\":\".*\",\r\n    \"status\":200,\r\n    \"body\":[]\r\n  }\r\n];\r\n","export class DatasetMetaLayers {\r\n  base?: string;\r\n  detail?: string;\r\n  outline: string;\r\n  shadow?: string;\r\n\r\n  constructor(args: {\r\n    base?: string,\r\n    detail?: string,\r\n    outline: string,\r\n    shadow?: string\r\n  }) {\r\n    if (args.base) {\r\n      this.base = args.base;\r\n    }\r\n    if (args.detail) {\r\n      this.detail = args.detail;\r\n    }\r\n    this.outline = args.outline;\r\n    if (args.shadow) {\r\n      this.shadow = args.shadow;\r\n    }\r\n  }\r\n}\r\n","import {DatasetMetaLayers} from \"./dataset-meta-layers\";\r\nimport {XY} from \"./xy\";\r\n\r\nexport class DatasetMetaPart {\r\n  layers: DatasetMetaLayers;\r\n  min: XY;\r\n  max: XY;\r\n\r\n  constructor(args: {layers:any,min:number[],max:number[]}) {\r\n    this.layers = new DatasetMetaLayers(args.layers);\r\n    this.min = new XY(args.min);\r\n    this.max = new XY(args.max);\r\n  }\r\n}\r\n","import {DatasetMetaPart} from \"./dataset-meta-part\";\r\n\r\nexport class DatasetMeta {\r\n  patternCount: number;\r\n  shadingCount: number;\r\n  parts: Map<string,DatasetMetaPart[]>\r\n\r\n  constructor(args: {\r\n    parts:{},\r\n    'pattern-count':number,\r\n    'shading-count':number\r\n  }) {\r\n    this.patternCount = args['pattern-count'];\r\n    this.shadingCount = args['shading-count'];\r\n    this.parts = new Map<string, DatasetMetaPart[]>();\r\n    let me = this;\r\n    Object.entries(args.parts).forEach(([key, value]) => {\r\n      let parts: DatasetMetaPart[] = [];\r\n      Array.from(value as any[]).forEach((p) => {\r\n        parts.push(new DatasetMetaPart(p));\r\n      });\r\n      me.parts.set(key,parts);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<svg:g [attr.transform]=\\\"matrix()\\\" [attr.opacity]=\\\"layer.opacity || 1.0\\\">\\r\\n  <svg:use *ngIf=\\\"part.layers.base\\\" [attr.xlink:href]=\\\"'#'+part.layers.base\\\" [attr.fill]=\\\"layer.base || 'white'\\\"></svg:use>\\r\\n  <svg:use *ngIf=\\\"part.layers.detail\\\" [attr.xlink:href]=\\\"'#'+part.layers.detail\\\" [attr.fill]=\\\"layer.detail || 'white'\\\"></svg:use>\\r\\n  <svg:g *ngIf=\\\"layer.pattern && layer.pattern >= 0\\\">\\r\\n    <svg:use *ngIf=\\\"part.layers.base\\\" [attr.xlink:href]=\\\"'#'+part.layers.base\\\" [attr.fill]=\\\"'url(#pattern_' + (layer.pattern>=10?'':'0') + layer.pattern+')'\\\"></svg:use>\\r\\n    <svg:use *ngIf=\\\"part.layers.detail\\\" [attr.xlink:href]=\\\"'#'+part.layers.detail\\\" [attr.fill]=\\\"'url(#pattern_' + (layer.pattern>=10?'':'0') + layer.pattern+')'\\\"></svg:use>\\r\\n  </svg:g>\\r\\n  <svg:g *ngIf=\\\"layer.shading && layer.shading >= 0\\\">\\r\\n    <svg:use *ngIf=\\\"part.layers.base\\\" [attr.xlink:href]=\\\"'#'+part.layers.base\\\" [attr.fill]=\\\"'url(#shading_' + (layer.shading>=10?'':'0') + layer.shading+')'\\\"></svg:use>\\r\\n    <svg:use *ngIf=\\\"part.layers.detail\\\" [attr.xlink:href]=\\\"'#'+part.layers.detail\\\" [attr.fill]=\\\"'url(#shading_' + (layer.shading>=10?'':'0') + layer.shading+')'\\\"></svg:use>\\r\\n  </svg:g>\\r\\n  <svg:use *ngIf=\\\"part.layers.outline\\\" [attr.xlink:href]=\\\"'#'+part.layers.outline\\\" [attr.stroke]=\\\"layer.outline || 'black'\\\"></svg:use>\\r\\n  <svg:use *ngIf=\\\"part.layers.shadow\\\" [attr.xlink:href]=\\\"'#'+part.layers.shadow\\\"></svg:use>\\r\\n</svg:g>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dGZpdHRlci9kaXNwbGF5LWxheWVyL2Rpc3BsYXktbGF5ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {SchematicLayer} from \"../schematic-layer\";\r\nimport {DatasetMeta} from \"../dataset-meta\";\r\nimport {DatasetMetaPart} from \"../dataset-meta-part\";\r\n\r\n@Component({\r\n  selector: 'display-layer',\r\n  templateUrl: './display-layer.component.html',\r\n  styleUrls: ['./display-layer.component.scss']\r\n})\r\nexport class DisplayLayerComponent implements OnInit {\r\n\r\n  @Input()\r\n  layer: SchematicLayer;\r\n\r\n  @Input()\r\n  part: DatasetMetaPart;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  matrix(): string {\r\n    return \"matrix(\" + [(this.layer.flip?-1:1)*this.layer.resize.x, 0.0, 0.0, this.layer.resize.y, this.layer.move.x, this.layer.move.y].join(\" \") + \")\";\r\n  }\r\n}\r\n","export const HEAD_PARTS: {} = {\r\n  \"beard\":true,\r\n  \"ears\":true,\r\n  \"eyebrows\":true,\r\n  \"eyes\":true,\r\n  \"hair\":true,\r\n  \"hat\":true,\r\n  \"head\":true,\r\n  \"mask\":true,\r\n  \"mouth\":true,\r\n  \"nose\":true,\r\n};\r\n","module.exports = \"<div [innerHTML]=\\\"buildSVG(schematic,meta) | safeHtml\\\"></div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dGZpdHRlci9vdXRmaXR0ZXItZGlzcGxheS9vdXRmaXR0ZXItZGlzcGxheS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Schematic} from \"../schematic\";\r\nimport {DatasetMeta} from \"../dataset-meta\";\r\nimport {XY} from \"../xy\";\r\nimport {SCALES} from \"../scales\";\r\nimport {DatasetMetaPart} from \"../dataset-meta-part\";\r\nimport {SVG} from \"../../util/svg\";\r\nimport {isNumber} from \"util\";\r\nimport {TORSO_TOPS} from \"../torso-tops\";\r\nimport {HEAD_PARTS} from \"../head-parts\";\r\n\r\n@Component({\r\n  selector: 'outfitter-display',\r\n  templateUrl: './outfitter-display.component.html',\r\n  styleUrls: ['./outfitter-display.component.scss']\r\n})\r\nexport class OutfitterDisplayComponent implements OnInit {\r\n\r\n  @Input()\r\n  schematic: Schematic;\r\n\r\n  @Input()\r\n  meta: DatasetMeta;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  buildSVG(schematic: Schematic, meta: DatasetMeta) {\r\n    let min = new XY([0,0]);\r\n    let max = new XY([0,0]);\r\n    let contents: string[] = [];\r\n    let bodyScale = new XY(SCALES[schematic.bodyScale] || [1.0, 1.0]);\r\n    let headShift = new XY([0.0, TORSO_TOPS[schematic.bodyType] * 0.8 * (1 - bodyScale.y)]);\r\n    schematic.layers.forEach((layer, index) => {\r\n      let part: DatasetMetaPart = meta.parts.get(layer.part)[layer.index];\r\n      let flip: XY = layer.resize.times(new XY([(layer.flip?-1.0:1.0),1.0]));\r\n      let move = layer.move;\r\n      if (HEAD_PARTS[layer.part]) {\r\n        move = move.plus(headShift);\r\n      } else {\r\n        flip = flip.times(bodyScale);\r\n      }\r\n      min = min.min(part.min.times(flip).plus(move));\r\n      max = max.max(part.max.times(flip).plus(move));\r\n      let group: string[] = [];\r\n      if (part.layers.base) {\r\n        group.push(SVG.use('#'+part.layers.base,{fill:(layer.base || 'white')}))\r\n      }\r\n      if (part.layers.detail) {\r\n        group.push(SVG.use('#'+part.layers.detail,{fill:(layer.detail || 'white')}))\r\n      }\r\n      if (isNumber(layer.pattern) && layer.pattern >= 0) {\r\n        let pattern: string[] = [];\r\n        if (part.layers.base) {\r\n          pattern.push(SVG.use('#'+part.layers.base,{}))\r\n        }\r\n        if (part.layers.detail) {\r\n          pattern.push(SVG.use('#'+part.layers.detail,{}))\r\n        }\r\n        if (pattern.length > 0) {\r\n          group.push(SVG.group({\r\n            fill:`url(#patterns-${layer.pattern>=10?'':'0'}${layer.pattern})`\r\n          },pattern));\r\n        }\r\n      }\r\n      if (isNumber(layer.shading) && layer.shading >= 0) {\r\n        let shading: string[] = [];\r\n        if (part.layers.base) {\r\n          shading.push(SVG.use('#'+part.layers.base,{}))\r\n        }\r\n        if (part.layers.detail) {\r\n          shading.push(SVG.use('#'+part.layers.detail,{}))\r\n        }\r\n        if (shading.length > 0) {\r\n          group.push(SVG.group({fill:`url(#shading-${layer.shading>=10?'':'0'}${layer.shading})`},shading));\r\n        }\r\n      }\r\n      if (part.layers.outline) {\r\n        group.push(SVG.use('#'+part.layers.outline,{stroke:(layer.outline || 'black')}))\r\n      }\r\n      if (part.layers.shadow) {\r\n        group.push(SVG.use('#'+part.layers.shadow,{}))\r\n      }\r\n      let elem = SVG.group({\r\n        transform:`matrix(${flip.x},0.0,0.0,${flip.y},${layer.move.x},${layer.move.y})`,\r\n        opacity:`${layer.opacity || 1.0}`\r\n      },group);\r\n      let anchor = SVG.anchor(`#`,{\r\n        onclick:`selectOutfitterLayer(event,'selectedLayer',${index})`\r\n      },[elem]);\r\n      contents.push(anchor);\r\n    });\r\n    let halfWidth = Math.max(Math.abs(max.x), Math.abs(min.x));\r\n    min = new XY([-1*halfWidth,min.y]);\r\n    max = new XY([halfWidth,max.y]);\r\n    let padding = new XY([10,10]);\r\n    min = min.minus(padding);\r\n    max = max.plus(padding);\r\n    let width = max.x-min.x;\r\n    let height = max.y-min.y;\r\n    let frame: string[] = [];\r\n    if (schematic.bgColor) {\r\n      frame.push(SVG.rect(min.x,min.y,width,height,{\r\n        stroke:'none',\r\n        fill:schematic.bgColor\r\n      }));\r\n    }\r\n    if (schematic.bgPattern) {\r\n      frame.push(SVG.rect(min.x,min.y,width,height,{\r\n        stroke:'none',\r\n        fill:`url(#patterns-${schematic.bgPattern>=10?'':'0'}${schematic.bgPattern})`\r\n      }));\r\n    }\r\n    frame.push(SVG.group({},contents))\r\n    return SVG.svg(\"\" + (1.5 * width),\"\" + (1.5 * height),{\r\n      viewBox:[min.x,min.y,width,height].join(\" \")\r\n    },frame);\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!defs && !meta\\\" class=\\\"d-flex flex-column\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"nes-btn btn-primary\\\" (click)=\\\"loadNew('fit')\\\">Fit</button>\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"nes-btn btn-primary\\\" (click)=\\\"loadNew('hulk')\\\">Hulk</button>\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"nes-btn btn-primary\\\" (click)=\\\"loadNew('superman')\\\">Superman</button>\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"nes-btn btn-primary\\\" (click)=\\\"loadNew('woman')\\\">Woman</button>\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label class=\\\"nes-btn\\\" *ngIf=\\\"!processing\\\">\\r\\n      <span>Load json schematic</span>\\r\\n      <input type=\\\"file\\\" id=\\\"loadFileInput\\\" style=\\\"display: none;\\\" (change)=\\\"loadSchematic($event)\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label class=\\\"nes-btn\\\" *ngIf=\\\"!processing\\\">\\r\\n      <span>Compile edn schematic</span>\\r\\n      <input type=\\\"file\\\" id=\\\"compileFileInput\\\" style=\\\"display: none;\\\" (change)=\\\"compileSchematic($event)\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"processing\\\">\\r\\n    <h3>\\\"{{fileName}}\\\" currently loading</h3>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"base64\\\" class=\\\"text-center\\\">\\r\\n    <img [alt]=\\\"fileName\\\" [src]=\\\"safeURL(base64)\\\"/>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"defs && meta\\\">\\r\\n  <span [innerHTML]=\\\"defs | safeHtml\\\"></span>\\r\\n  <form [formGroup]=\\\"schematicForm\\\">\\r\\n    <h3>{{schematic.bodyType}}</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3 d-flex\\\">\\r\\n        <div class=\\\"p-2\\\">\\r\\n          <button class=\\\"nes-btn\\\" (click)=\\\"saveData()\\\">Save Data</button>\\r\\n        </div>\\r\\n        <div class=\\\"p-2\\\">\\r\\n          <button *ngIf=\\\"!processing\\\" class=\\\"nes-btn\\\" (click)=\\\"saveImage()\\\">Save Image</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-7 nes-container is-rounded m-1\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col p-2 nes-field is-inline\\\">\\r\\n            <label for=\\\"bodyScale\\\">Body Scale</label>\\r\\n            <div class=\\\"nes-select\\\">\\r\\n              <select class=\\\"nes-input\\\" required id=\\\"bodyScale\\\" formControlName=\\\"bodyScale\\\" (change)=\\\"setBodyScale()\\\">\\r\\n                <option value=\\\"\\\" disabled selected hidden>Select Body Scale</option>\\r\\n                <option value=\\\"\\\">Default</option>\\r\\n                <option value=\\\"lanky\\\">Lanky</option>\\r\\n                <option value=\\\"thin\\\">Thin</option>\\r\\n                <option value=\\\"stocky\\\">Stocky</option>\\r\\n                <option value=\\\"petite\\\">Petite</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col p-2\\\">\\r\\n            <div class=\\\"nes-field is-inline\\\">\\r\\n              <label>BG Color</label>\\r\\n              <color-picker [selectedValue]=\\\"schematicForm.value.bgColor||'white'\\\" (retVal)=\\\"setBackgroundColor($event)\\\"></color-picker>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col p-2\\\">\\r\\n            <div class=\\\"nes-field is-inline\\\">\\r\\n              <label for=\\\"bgPattern\\\">BG Pattern</label>\\r\\n              <input type=\\\"number\\\" id=\\\"bgPattern\\\" formControlName=\\\"bgPattern\\\" class=\\\"nes-input\\\" min=\\\"-1\\\" max=\\\"{{meta.patternCount - 1}}\\\" (change)=\\\"setBGPattern()\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <div class=\\\"d-flex flex-column\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-2\\\">\\r\\n              <button class=\\\"nes-btn is-success\\\" (click)=\\\"addLayer()\\\">Add Layer</button>\\r\\n            </div>\\r\\n            <div class=\\\"col p-2\\\">\\r\\n              <button *ngIf=\\\"selectedLayer\\\" class=\\\"nes-btn is-error\\\" (click)=\\\"removeCurrentLayer()\\\">Remove Layer</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4 p-2\\\">\\r\\n              <div class=\\\"nes-field is-inline\\\">\\r\\n                <label for=\\\"selectedLayer\\\">Active Layer</label>\\r\\n                <div class=\\\"nes-select\\\">\\r\\n                  <select class=\\\"nes-input\\\" id=\\\"selectedLayer\\\" formControlName=\\\"selectedLayer\\\" (change)=\\\"loadSelectedLayer()\\\">\\r\\n                    <option value=\\\"\\\" disabled selected hidden>Select Layer</option>\\r\\n                    <ng-container *ngFor=\\\"let layer of schematic.layers; index as i\\\">\\r\\n                      <option [value]=\\\"i\\\">{{i}}: {{layer.part}} {{layer.index}}</option>\\r\\n                    </ng-container>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col d-flex\\\" *ngIf=\\\"selectedLayer\\\" >\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <button class=\\\"nes-btn\\\" title=\\\"Move To Back\\\" (click)=\\\"moveToBack()\\\"><i class='fas fa-fast-backward'></i></button>\\r\\n              </div>\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <button class=\\\"nes-btn\\\" title=\\\"Move Back\\\" (click)=\\\"moveBack()\\\"><i class='fas fa-step-backward'></i></button>\\r\\n              </div>\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <button class=\\\"nes-btn\\\" title=\\\"Move Forward\\\" (click)=\\\"moveForward()\\\"><i class='fas fa-step-forward'></i></button>\\r\\n              </div>\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <button class=\\\"nes-btn\\\" title=\\\"Move To Front\\\" (click)=\\\"moveToFront()\\\"><i class='fas fa-fast-forward'></i></button>\\r\\n              </div>\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <button class=\\\"nes-btn {{schematicForm.value.flip?'flipH':''}}\\\" (click)=\\\"toggleFlip()\\\">Flip?</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"selectedLayer\\\">\\r\\n            <div class=\\\"col nes-field is-inline p-2\\\">\\r\\n              <label for=\\\"partType\\\">Part: </label>\\r\\n              <select class=\\\"nes-input p-2\\\" id=\\\"partType\\\" formControlName=\\\"partType\\\" (change)=\\\"setPartType()\\\">\\r\\n                <option value=\\\"\\\" disabled selected hidden>Select Part Type</option>\\r\\n                <optgroup *ngFor=\\\"let group of partGroups\\\" label=\\\"{{group}}\\\">\\r\\n                  <option *ngFor=\\\"let part of partTypes.get(group)\\\" [value]=\\\"part.part\\\">{{part.label}}</option>\\r\\n                </optgroup>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"col nes-field is-inline p-2\\\">\\r\\n              <label for=\\\"partIndex\\\">Part Index</label>\\r\\n              <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"{{(meta.parts.get(schematicForm.value.partType)||[]).length -1}}\\\" id=\\\"partIndex\\\" formControlName=\\\"partIndex\\\" class=\\\"nes-input\\\" (change)=\\\"setPartIndex()\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col d-flex flex-column nes-container is-rounded m-1 with-title\\\" *ngIf=\\\"selectedLayer\\\" >\\r\\n              <span class=\\\"title\\\">Colors</span>\\r\\n              <div class=\\\"nes-field is-inline p-2\\\">\\r\\n                <label>Base</label>\\r\\n                <color-picker [selectedValue]=\\\"selectedLayer.base||'white'\\\" (retVal)=\\\"setBaseColor($event)\\\"></color-picker>\\r\\n              </div>\\r\\n              <div class=\\\"nes-field is-inline p-2\\\">\\r\\n                <label>Detail</label>\\r\\n                <color-picker [selectedValue]=\\\"selectedLayer.detail||'white'\\\" (retVal)=\\\"setDetailColor($event)\\\"></color-picker>\\r\\n              </div>\\r\\n              <div class=\\\"nes-field is-inline p-2\\\">\\r\\n                <label>Outline</label>\\r\\n                <color-picker [selectedValue]=\\\"selectedLayer.outline||'white'\\\" (retVal)=\\\"setOutlineColor($event)\\\"></color-picker>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col d-flex flex-column nes-container is-rounded m-1\\\" *ngIf=\\\"selectedIndex>=0\\\" >\\r\\n              <div class=\\\"nes-field is-inline p-2\\\">\\r\\n                <label for=\\\"opacity\\\">Opacity</label>\\r\\n                <input type=\\\"number\\\" min=\\\"0.00\\\" max=\\\"1.00\\\" step=\\\"0.05\\\" id=\\\"opacity\\\" formControlName=\\\"opacity\\\" class=\\\"nes-input\\\" (change)=\\\"setOpacity()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"nes-field is-inline p-2\\\">\\r\\n                <label for=\\\"pattern\\\">Pattern</label>\\r\\n                <input type=\\\"number\\\" id=\\\"pattern\\\" formControlName=\\\"pattern\\\" class=\\\"nes-input\\\" min=\\\"-1\\\" max=\\\"{{meta.patternCount - 1}}\\\" (change)=\\\"setPattern()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"nes-field is-inline p-2\\\">\\r\\n                <label for=\\\"shading\\\">Shading</label>\\r\\n                <input type=\\\"number\\\" id=\\\"shading\\\" formControlName=\\\"shading\\\" class=\\\"nes-input\\\" min=\\\"-1\\\" max=\\\"{{meta.shadingCount - 1}}\\\" (change)=\\\"setShading()\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col d-flex flex-column nes-container is-rounded with-title m-1\\\" *ngIf=\\\"selectedIndex>=0\\\" >\\r\\n              <span class=\\\"title\\\">Resize</span>\\r\\n              <div class=\\\"nes-field is-inline\\\">\\r\\n                <label for=\\\"resize_x\\\">X</label>\\r\\n                <input type=\\\"number\\\" id=\\\"resize_x\\\" step=\\\"0.01\\\" formControlName=\\\"resize_x\\\" class=\\\"nes-input\\\" (change)=\\\"setResizeX()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"nes-field is-inline\\\">\\r\\n                <label for=\\\"resize_y\\\">Y</label>\\r\\n                <input type=\\\"number\\\" id=\\\"resize_y\\\" step=\\\"0.01\\\" formControlName=\\\"resize_y\\\" class=\\\"nes-input\\\" (change)=\\\"setResizeY()\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col d-flex flex-column nes-container is-rounded with-title m-1\\\" *ngIf=\\\"selectedIndex>=0\\\" >\\r\\n              <span class=\\\"title\\\">Move</span>\\r\\n              <div class=\\\"nes-field is-inline\\\">\\r\\n                <label for=\\\"move_x\\\">X</label>\\r\\n                <input type=\\\"number\\\" id=\\\"move_x\\\" formControlName=\\\"move_x\\\" class=\\\"nes-input\\\" (change)=\\\"setMoveX()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"nes-field is-inline\\\">\\r\\n                <label for=\\\"move_y\\\">Y</label>\\r\\n                <input type=\\\"number\\\" id=\\\"move_y\\\" formControlName=\\\"move_y\\\" class=\\\"nes-input\\\" (change)=\\\"setMoveY()\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <outfitter-display [schematic]=\\\"schematic\\\" [meta]=\\\"meta\\\"></outfitter-display>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \".flipH {\\n  transform: scale(-1, 1); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3V0Zml0dGVyL0M6XFxVc2Vyc1xccG9zc2xfMDAwXFxEb2N1bWVudHNcXEdpdEh1YlxcY2FyYWJpbmVyXFxmcm9udC9zcmNcXGFwcFxcb3V0Zml0dGVyXFxvdXRmaXR0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFLRSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL291dGZpdHRlci9vdXRmaXR0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmxpcEgge1xyXG4gIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTtcclxuICAtby10cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTtcclxuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {OutfitterService} from \"./outfitter.service\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\nimport {DatasetMeta} from \"./dataset-meta\";\r\nimport {Schematic} from \"./schematic\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {SchematicLayer} from \"./schematic-layer\";\r\nimport {PART_TYPES} from \"./part-types\";\r\nimport {PartType} from \"./part-type\";\r\nimport {PART_GROUPS} from \"./part-groups\";\r\n\r\n@Component({\r\n  selector: 'app-outfitter',\r\n  templateUrl: './outfitter.component.html',\r\n  styleUrls: ['./outfitter.component.scss']\r\n})\r\nexport class OutfitterComponent implements OnInit {\r\n\r\n  constructor(private os : OutfitterService, private sanitizer:DomSanitizer, private fb: FormBuilder) { }\r\n\r\n  schematicForm: FormGroup = this.fb.group({\r\n    bgColor:[''],\r\n    bgPattern:[-1],\r\n    bodyScale:[''],\r\n    selectedLayer:[-1],\r\n    partType:[''],\r\n    partIndex:[0],\r\n    base:[''],\r\n    detail:[''],\r\n    outline:[''],\r\n    opacity:[1],\r\n    pattern:[-1],\r\n    shading:[-1],\r\n    resize_x:[1],\r\n    resize_y:[1],\r\n    move_x:[0],\r\n    move_y:[0],\r\n    flip:[false]\r\n  });\r\n  processing: boolean;\r\n  base64: string;\r\n\r\n  fileName: string;\r\n  defs: string;\r\n\r\n  meta: DatasetMeta;\r\n  schematic: Schematic;\r\n\r\n  maxPartIndex: number;\r\n  partGroups: string[] = PART_GROUPS;\r\n\r\n  partTypes: Map<string,PartType[]> = PART_TYPES;\r\n\r\n  selectedIndex: number = -1;\r\n  selectedLayer: SchematicLayer;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  safeURL(base64: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(\"data:image/png;base64, \" + base64);\r\n  }\r\n\r\n  loadBodyType(bodyType: string,onMetaLoad?:()=>void) {\r\n    this.os.getDatasetDefs(bodyType).subscribe((defs) => {\r\n      let start = defs.indexOf(\"<svg\");\r\n      this.defs = defs.substr(start);\r\n    });\r\n    this.os.getDatasetMeta(bodyType).subscribe((meta) => {\r\n      this.meta = new DatasetMeta(meta);\r\n      if (onMetaLoad) {\r\n        onMetaLoad();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadNew(bodyType: string) {\r\n    this.schematic = new Schematic(bodyType);\r\n    this.schematic.bodyType = bodyType;\r\n    this.schematic.bgColor = \"#cccccc\";\r\n    this.schematic.layers = [\r\n      {\"part\":\"torso\",\"index\":0,\"shading\":0},\r\n      {\"part\":\"legs\",\"index\":0,\"shading\":0},\r\n      {\"part\":\"arm\",\"index\":0,\"shading\":0},\r\n      {\"part\":\"arm\",\"index\":0,\"shading\":0,\"flip\":true},\r\n      {\"part\":\"head\",\"index\":0,\"shading\":0},\r\n    ].map(SchematicLayer.fromJSON);\r\n    this.schematicForm.patchValue({\r\n      bgColor:this.schematic.bgColor,\r\n      selectedLayer:4\r\n    });\r\n    this.loadBodyType(bodyType,()=>{\r\n      this.loadSelectedLayer();\r\n    });\r\n  }\r\n\r\n  loadSchematic(e) {\r\n    let files = Array.from(e.target.files);\r\n    if (files.length > 0) {\r\n      let file : File = <File>files[0];\r\n      this.fileName = file.name;\r\n      this.base64 = undefined;\r\n      let me = this;\r\n      let reader = new FileReader();\r\n      reader.onload = function() {\r\n        let data:string = reader.result.toString();\r\n        me.schematic = Schematic.fromJSON(JSON.parse(data));\r\n        me.loadBodyType(me.schematic.bodyType,()=>{\r\n          if (me.schematic.layers.length > 0) {\r\n            me.schematicForm.patchValue({selectedLayer:0});\r\n            me.loadSelectedLayer();\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  compileSchematic(e) {\r\n    let files = Array.from(e.target.files);\r\n    if (files.length > 0) {\r\n      let file : File = <File>files[0];\r\n      this.fileName = file.name;\r\n      this.base64 = undefined;\r\n      let me = this;\r\n      let reader = new FileReader();\r\n      reader.onload = function() {\r\n        let data = reader.result.toString();\r\n        me.processing = true;\r\n        me.os.loadSchematic(data).subscribe((base64) => {\r\n          me.base64 = base64;\r\n          me.processing = false;\r\n        });\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  setBodyScale() {\r\n    this.schematic.bodyScale = this.schematicForm.value.bodyScale;\r\n  }\r\n\r\n  setBackgroundColor(selectedColor: string) {\r\n    this.schematic.bgColor = selectedColor;\r\n    this.schematicForm.patchValue({bgColor:selectedColor});\r\n  }\r\n\r\n  setBGPattern() {\r\n    this.schematic.bgPattern = this.schematicForm.value.bgPattern;\r\n  }\r\n\r\n  loadSelectedLayer() {\r\n    this.selectedIndex = ((typeof this.schematicForm.value.selectedLayer) === \"string\")?parseInt(this.schematicForm.value.selectedLayer):(this.schematicForm.value.selectedLayer as number);\r\n    if (this.selectedIndex >= 0 && this.selectedIndex < this.schematic.layers.length) {\r\n      this.selectedLayer = this.schematic.layers[this.selectedIndex];\r\n      this.schematicForm.patchValue(this.selectedLayer.formValue());\r\n      let partType = this.schematicForm.value.partType;\r\n      this.maxPartIndex = this.meta.parts.get(partType).length;\r\n    }\r\n  }\r\n\r\n  private clearSelectedLayer() {\r\n    this.selectedIndex = -1;\r\n    this.selectedLayer = undefined;\r\n  }\r\n\r\n  addLayer() {\r\n    this.schematic.layers.push(new SchematicLayer());\r\n    this.schematicForm.patchValue({selectedLayer:this.schematic.layers.length - 1});\r\n    this.maxPartIndex = 0;\r\n    this.loadSelectedLayer();\r\n  }\r\n\r\n  removeCurrentLayer() {\r\n    if (this.selectedIndex >= 0 && this.selectedIndex < this.schematic.layers.length) {\r\n      this.schematic.layers.splice(this.selectedIndex,1);\r\n      if (this.selectedIndex === this.schematic.layers.length) {\r\n        this.selectedIndex--;\r\n        this.schematicForm.patchValue({selectedLayer:this.selectedIndex});\r\n      }\r\n      if (this.schematic.layers.length > 0) {\r\n        this.loadSelectedLayer();\r\n      } else {\r\n        this.clearSelectedLayer();\r\n      }\r\n    }\r\n  }\r\n\r\n  moveBack() {\r\n    if (this.selectedIndex > 0 && this.selectedIndex < this.schematic.layers.length) {\r\n      this.swapLayers(this.selectedIndex-1,this.selectedIndex);\r\n      this.selectedIndex--;\r\n      this.schematicForm.patchValue({selectedLayer:this.selectedIndex});\r\n      this.loadSelectedLayer();\r\n    }\r\n  }\r\n\r\n  moveForward() {\r\n    if (this.selectedIndex >= 0 && this.selectedIndex < this.schematic.layers.length-1) {\r\n      this.swapLayers(this.selectedIndex,this.selectedIndex+1);\r\n      this.selectedIndex++;\r\n      this.schematicForm.patchValue({selectedLayer:this.selectedIndex});\r\n      this.loadSelectedLayer();\r\n    }\r\n  }\r\n\r\n  moveToBack() {\r\n    if (this.selectedIndex > 0 && this.selectedIndex < this.schematic.layers.length) {\r\n      let temp = this.schematic.layers.splice(this.selectedIndex,1)[0];\r\n      this.schematic.layers.unshift(temp);\r\n      this.selectedIndex = 0;\r\n      this.schematicForm.patchValue({selectedLayer:this.selectedIndex});\r\n      this.loadSelectedLayer();\r\n    }\r\n  }\r\n\r\n  moveToFront() {\r\n    if (this.selectedIndex >= 0 && this.selectedIndex < this.schematic.layers.length-1) {\r\n      let temp = this.schematic.layers.splice(this.selectedIndex,1)[0];\r\n      this.schematic.layers.push(temp);\r\n      this.selectedIndex = this.schematic.layers.length - 1;\r\n      this.schematicForm.patchValue({selectedLayer:this.selectedIndex});\r\n      this.loadSelectedLayer();\r\n    }\r\n  }\r\n\r\n  private swapLayers(a: number, b: number) {\r\n    let temp = this.schematic.layers[a];\r\n    this.schematic.layers[a] = this.schematic.layers[b];\r\n    this.schematic.layers[b] = temp;\r\n  }\r\n\r\n  setPartType() {\r\n    if (this.selectedLayer) {\r\n      let partType = this.schematicForm.value.partType;\r\n      this.selectedLayer.part = partType;\r\n      this.maxPartIndex = this.meta.parts.get(partType).length;\r\n    }\r\n  }\r\n\r\n  setPartIndex() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.index = this.schematicForm.value.partIndex;\r\n    }\r\n  }\r\n\r\n  setBaseColor(color: string) {\r\n    if (this.selectedLayer) {\r\n      this.schematicForm.patchValue({base:color});\r\n      this.selectedLayer.base = color;\r\n    }\r\n  }\r\n\r\n  setDetailColor(color: string) {\r\n    if (this.selectedLayer) {\r\n      this.schematicForm.patchValue({detail:color});\r\n      this.selectedLayer.detail = color;\r\n    }\r\n  }\r\n\r\n  setOutlineColor(color: string) {\r\n    if (this.selectedLayer) {\r\n      this.schematicForm.patchValue({outline:color});\r\n      this.selectedLayer.outline = color;\r\n    }\r\n  }\r\n\r\n  setOpacity() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.opacity = this.schematicForm.value.opacity;\r\n    }\r\n  }\r\n\r\n  setPattern() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.pattern = this.schematicForm.value.pattern;\r\n    }\r\n  }\r\n\r\n  setShading() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.shading = this.schematicForm.value.shading;\r\n    }\r\n  }\r\n\r\n  setResizeX() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.resize.x = this.schematicForm.value.resize_x;\r\n    }\r\n  }\r\n\r\n  setResizeY() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.resize.y = this.schematicForm.value.resize_y;\r\n    }\r\n  }\r\n\r\n  setMoveX() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.move.x = this.schematicForm.value.move_x;\r\n    }\r\n  }\r\n\r\n  setMoveY() {\r\n    if (this.selectedLayer) {\r\n      this.selectedLayer.move.y = this.schematicForm.value.move_y;\r\n    }\r\n  }\r\n\r\n  toggleFlip() {\r\n    if (this.selectedLayer) {\r\n      let flip = !this.schematicForm.value.flip;\r\n      this.schematicForm.patchValue({flip:flip});\r\n      this.selectedLayer.flip = flip;\r\n    }\r\n  }\r\n\r\n  saveData() {\r\n    this.os.downloadSchematic(this.schematic);\r\n  }\r\n\r\n  saveImage() {\r\n    let me = this;\r\n    me.processing = true;\r\n    me.fileName = \"outfit.png\";\r\n    this.os.downloadImage(this.schematic,()=>{\r\n      me.processing = false;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {DatasetMeta} from \"./dataset-meta\";\r\nimport {DownloadLink} from \"../util/download-link\";\r\nimport {Schematic} from \"./schematic\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OutfitterService {\r\n\r\n  downloader: DownloadLink = new DownloadLink();\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  loadSchematic(schematic: string): Observable<string> {\r\n    return this.client.post<string>(\"/outfitter/publish/edn\",schematic);\r\n  }\r\n\r\n  downloadImage(schematic: Schematic, onload:()=>void) {\r\n    return this.client.post<string>(\"/outfitter/publish/json\",schematic.toJSON()).subscribe((base64) => {\r\n      this.downloader.setFileName(\"outfit.png\");\r\n      this.downloader.setPath(\"data:image/png;base64,\" + base64);\r\n      this.downloader.invokeDownload();\r\n      onload();\r\n    });\r\n  }\r\n\r\n  getDatasetDefs(bodyType: string): Observable<string> {\r\n    return this.client.get(\"/outfitter/datasets/\" + bodyType + \".svg\",{responseType:\"text\"});\r\n  }\r\n\r\n  getDatasetMeta(bodyType: string): Observable<any> {\r\n    return this.client.get<any>(\"/outfitter/datasets/\" + bodyType + \".json\");\r\n  }\r\n\r\n  downloadSchematic(schematic:Schematic) {\r\n    this.downloader.setFileName(\"outfit.json\");\r\n    this.downloader.setPath(\"data:text/plain;,\" + encodeURIComponent(JSON.stringify(schematic.toJSON())));\r\n    this.downloader.invokeDownload();\r\n  }\r\n}\r\n","export const PART_GROUPS: string[] = [\r\n  \"Body\",\r\n  \"Face\",\r\n  \"Tights\",\r\n  \"Clothing\",\r\n  \"Back\",\r\n  \"Accessories\",\r\n];\r\n","export class PartType {\n  part:string;\n  group:string;\n  label:string;\n\n  constructor([part,group,label]:string[]) {\n    this.part = part;\n    this.group = group;\n    this.label = label || (part.charAt(0).toUpperCase() + part.substr(1).toLowerCase());\n  }\n}\n","import {PartType} from \"./part-type\";\r\n\r\nexport const PART_TYPES: Map<string,PartType[]> = [\r\n  [\"arm\",\"Body\"],\r\n  [\"back\",\"Back\"],\r\n  [\"beard\",\"Face\"],\r\n  [\"belt\",\"Clothing\"],\r\n  [\"boots\",\"Clothing\"],\r\n  [\"chest\",\"Clothing\"],\r\n  [\"collar\",\"Clothing\"],\r\n  [\"ears\",\"Face\"],\r\n  [\"eyebrows\",\"Face\"],\r\n  [\"eyes\",\"Face\"],\r\n  [\"gauntlets\",\"Clothing\"],\r\n  [\"gloves\",\"Tights\"],\r\n  [\"hair\",\"Face\"],\r\n  [\"hat\",\"Clothing\"],\r\n  [\"head\",\"Body\"],\r\n  [\"legs\",\"Body\"],\r\n  [\"mask\",\"Tights\"],\r\n  [\"mouth\",\"Face\"],\r\n  [\"nose\",\"Face\"],\r\n  [\"pants\",\"Clothing\"],\r\n  [\"shirt\",\"Tights\"],\r\n  [\"sholders\",\"Clothing\",\"Shoulders\"],\r\n  [\"stockings\",\"Tights\"],\r\n  [\"symbol_A\",\"Accessories\",\"Symbol A\"],\r\n  [\"symbol_B\",\"Accessories\",\"Symbol B\"],\r\n  [\"tights\",\"Tights\",\"Leggings\"],\r\n  [\"torso\",\"Body\"],\r\n  [\"wings_and_tail\",\"Back\", \"Wings And Tails\"]\r\n].reduce((out,args) => {\r\n  let temp = new PartType(args);\r\n  if (out.has(temp.group)) {\r\n    out.get(temp.group).push(temp);\r\n  } else {\r\n    out.set(temp.group,[temp]);\r\n  }\r\n  return out;\r\n},new Map<string,PartType[]>());\r\n","export const SCALES: {} = {\r\n  \"lanky\":  [0.85, 1.15],\r\n  \"thin\":   [0.85, 1.0],\r\n  \"stocky\": [0.85, 0.75],\r\n  \"petite\": [0.7, 0.7]\r\n};\r\n","import {XY} from \"./xy\";\r\n\r\nexport class SchematicLayer {\r\n  part: string = 'arm';\r\n  index: number = 0;\r\n  base?: string;\r\n  detail?: string;\r\n  outline?: string;\r\n  opacity?: number;\r\n  pattern?: number;\r\n  shading?: number = 1;\r\n  resize?: XY = new XY([1,1]);\r\n  move?: XY = new XY([0,0]);\r\n  flip?: boolean;\r\n\r\n  formValue() {\r\n    return {\r\n      partType: this.part,\r\n      partIndex: this.index,\r\n      base: this.base,\r\n      detail: this.detail,\r\n      outline: this.outline,\r\n      opacity: this.opacity,\r\n      pattern: this.pattern,\r\n      shading: this.shading,\r\n      resize_x: this.resize.x,\r\n      resize_y: this.resize.y,\r\n      move_x: this.move.x,\r\n      move_y: this.move.y,\r\n      flip: this.flip\r\n    };\r\n  }\r\n\r\n  static fromJSON(args: {\r\n    part: string,\r\n    index: number,\r\n    base?: string,\r\n    detail?: string,\r\n    outline?: string,\r\n    opacity?: number,\r\n    pattern?: number,\r\n    shading?: number,\r\n    resize?: number[],\r\n    move?: number[],\r\n    flip?: boolean\r\n  }): SchematicLayer {\r\n    let out = new SchematicLayer();\r\n    out.part = args.part;\r\n    out.index = args.index;\r\n    if (args.base) {\r\n      out.base = args.base;\r\n    }\r\n    if (args.detail) {\r\n      out.detail = args.detail;\r\n    }\r\n    if (args.outline) {\r\n      out.outline = args.outline;\r\n    }\r\n    if ((typeof args.opacity) === \"number\") {\r\n      out.opacity = args.opacity;\r\n    }\r\n    if ((typeof args.pattern) === \"number\") {\r\n      out.pattern = args.pattern;\r\n    }\r\n    if ((typeof args.shading) === \"number\") {\r\n      out.shading = args.shading;\r\n    }\r\n    out.resize = new XY(args.resize||[1,1]);\r\n    out.move = new XY(args.move||[0,0]);\r\n    if (args.flip) {\r\n      out.flip = args.flip;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  toJSON(): {\r\n    part: string,\r\n    index: number,\r\n    base?: string,\r\n    detail?: string,\r\n    outline?: string,\r\n    opacity?: number,\r\n    pattern?: number,\r\n    shading?: number,\r\n    resize?: number[],\r\n    move?: number[],\r\n    flip?: boolean\r\n  } {\r\n    let out: {\r\n      part: string,\r\n      index: number,\r\n      base?: string,\r\n      detail?: string,\r\n      outline?: string,\r\n      opacity?: number,\r\n      pattern?: number,\r\n      shading?: number,\r\n      resize?: number[],\r\n      move?: number[],\r\n      flip?: boolean\r\n    } = {\r\n      part:this.part,\r\n      index:this.index\r\n    };\r\n    if (this.base) {\r\n      out.base = this.base;\r\n    }\r\n    if (this.detail) {\r\n      out.detail = this.detail;\r\n    }\r\n    if (this.outline) {\r\n      out.outline = this.outline;\r\n    }\r\n    if (this.opacity) {\r\n      out.opacity = this.opacity;\r\n    }\r\n    if (this.pattern && this.pattern >= 0) {\r\n      out.pattern = this.pattern;\r\n    }\r\n    if (this.shading && this.shading >= 0) {\r\n      out.shading = this.shading;\r\n    }\r\n    if (this.resize) {\r\n      out.resize = [this.resize.x, this.resize.y];\r\n    }\r\n    if (this.move) {\r\n      out.move = [this.move.x, this.move.y];\r\n    }\r\n    if (this.flip) {\r\n      out.flip = this.flip || false;\r\n    }\r\n    return out;\r\n  }\r\n}\r\n","import {SchematicLayer} from \"./schematic-layer\";\r\n\r\nexport class Schematic {\r\n  bodyType: string;\r\n  bgColor?: string;\r\n  bgPattern?: number;\r\n  bodyScale?: string;\r\n  layers: SchematicLayer[];\r\n\r\n  constructor(bodyType: string) {\r\n    this.bodyType = bodyType;\r\n    this.layers = [];\r\n  }\r\n\r\n  static fromJSON(args: {\r\n    bodyType: string,\r\n    bgColor?: string,\r\n    bgPattern?: number,\r\n    bodyScale?: string,\r\n    layers: {\r\n      part: string,\r\n      index: number,\r\n      base?: string,\r\n      detail?: string,\r\n      outline?: string,\r\n      opacity?: number,\r\n      pattern?: number,\r\n      shading?: number,\r\n      resize?: number[],\r\n      move?: number[],\r\n      flip?: boolean\r\n    }[]\r\n  }): Schematic {\r\n    let out = new Schematic(args.bodyType);\r\n    if (args.bgColor) {\r\n      out.bgColor = args.bgColor;\r\n    }\r\n    if (args.bgPattern) {\r\n      out.bgPattern = args.bgPattern;\r\n    }\r\n    if (args.bodyScale) {\r\n      out.bodyScale = args.bodyScale;\r\n    }\r\n    out.layers = args.layers.map((l) => SchematicLayer.fromJSON(l));\r\n    return out;\r\n  }\r\n\r\n  toJSON(): {\r\n    bodyType: string,\r\n    bgColor?: string,\r\n    bgPattern?: number,\r\n    bodyScale?: string,\r\n    layers: {\r\n      part: string,\r\n      index: number,\r\n      base?: string,\r\n      detail?: string,\r\n      outline?: string,\r\n      opacity?: number,\r\n      pattern?: number,\r\n      shading?: number,\r\n      resize?: number[],\r\n      move?: number[],\r\n      flip?: boolean\r\n    }[]\r\n  } {\r\n    let out: {\r\n      bodyType: string,\r\n      bgColor?: string,\r\n      bgPattern?: number,\r\n      bodyScale?: string,\r\n      layers: {\r\n        part: string,\r\n        index: number,\r\n        base?: string,\r\n        detail?: string,\r\n        outline?: string,\r\n        opacity?: number,\r\n        pattern?: number,\r\n        shading?: number,\r\n        resize?: number[],\r\n        move?: number[],\r\n        flip?: boolean\r\n      }[]\r\n    } = {\r\n      bodyType: this.bodyType,\r\n      layers: this.layers.map((layer) => layer.toJSON())\r\n    };\r\n    if (this.bgColor) {\r\n      out['bgColor'] = this.bgColor;\r\n    }\r\n    if (this.bgPattern && this.bgPattern >= 0) {\r\n      out['bgPattern'] = this.bgPattern;\r\n    }\r\n    if (this.bodyScale && this.bodyScale.length > 0) {\r\n      out['bodyScale'] = this.bodyScale;\r\n    }\r\n    return out;\r\n  }\r\n}\r\n","export const TORSO_TOPS: {} = {\r\n  \"fit\": 106.35,\r\n  \"hulk\": 169.1,\r\n  \"superman\": 146.9,\r\n  \"woman\": 93.6\r\n};\r\n","export class XY {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor([x, y]: number[]) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  static identityMultiplier(): XY {\r\n    return new XY([1,1]);\r\n  }\r\n\r\n  static origin(): XY {\r\n    return new XY([0,0]);\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.x, this.y];\r\n  }\r\n\r\n  plus(p: XY): XY {\r\n    return new XY([this.x+p.x,this.y+p.y]);\r\n  }\r\n\r\n  minus(p: XY): XY {\r\n    return new XY([this.x-p.x,this.y-p.y]);\r\n  }\r\n\r\n  times(p: XY): XY {\r\n    return new XY([this.x*p.x,this.y*p.y]);\r\n  }\r\n\r\n  min(p: XY): XY {\r\n    return new XY([Math.min(this.x,p.x),Math.min(this.y,p.y)]);\r\n  }\r\n\r\n  max(p: XY): XY {\r\n    return new XY([Math.max(this.x,p.x),Math.max(this.y,p.y)]);\r\n  }\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"palette && pixels\\\">\\r\\n  <svg width=\\\"100%\\\" height=\\\"100%\\\"\\r\\n    [attr.viewBox]=\\\"'0 0 ' + (width * scale) + ' ' + (height * scale)\\\">\\r\\n    <ng-container *ngFor=\\\"let y of range.max(height)\\\">\\r\\n      <ng-container *ngFor=\\\"let x of range.max(width)\\\">\\r\\n        <a [attr.href]=\\\"'#/' + page\\\"\\r\\n          (mousedown)=\\\"initOutline($event)\\\"\\r\\n          (mouseover)=\\\"adjustOutline($event)\\\"\\r\\n          (mouseup)=\\\"completeOutline($event)\\\">\\r\\n          <rect\\r\\n            [attr.alt]=\\\"x + 'x' + y\\\"\\r\\n            [attr.x]=\\\"x * scale\\\"\\r\\n            [attr.y]=\\\"y * scale\\\"\\r\\n            [attr.width]=\\\"scale\\\"\\r\\n            [attr.height]=\\\"scale\\\"\\r\\n            [attr.fill]=\\\"palette[pixels[x + 'x' + y]]||backgroundColor\\\"\\r\\n            style=\\\"stroke:black;stroke-width:1;\\\"></rect>\\r\\n        </a>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"hasOutline()\\\">\\r\\n      <rect [attr.x]=\\\"startCorner.x * scale\\\" [attr.y]=\\\"startCorner.y * scale\\\"\\r\\n        [attr.width]=\\\"outlineDim.x * scale\\\" [attr.height]=\\\"outlineDim.y * scale\\\"\\r\\n        fill=\\\"none\\\" stroke=\\\"red\\\" stroke-width=\\\"1\\\"/>\\r\\n    </ng-container>\\r\\n  </svg>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BpeGVsLWNhbnZhcy9waXhlbC1jYW52YXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Trigger} from \"../util/trigger\";\r\nimport {Range} from \"../util/range\";\r\nimport {Point} from \"../util/point\";\r\n\r\n@Component({\r\n  selector: 'app-pixel-canvas',\r\n  templateUrl: './pixel-canvas.component.html',\r\n  styleUrls: ['./pixel-canvas.component.scss']\r\n})\r\nexport class PixelCanvasComponent implements OnInit {\r\n\r\n  @Input()\r\n  pixels: {};\r\n\r\n  @Input()\r\n  scale: number;\r\n\r\n  @Input()\r\n  width: number;\r\n\r\n  @Input()\r\n  height: number;\r\n\r\n  @Input()\r\n  palette: string[];\r\n\r\n  @Input()\r\n  backgroundColor: string;\r\n\r\n  @Input()\r\n  colorIndex: number;\r\n\r\n  @Input()\r\n  page: string;\r\n\r\n  range = Range;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setColorForPixel(x:number,y:number) {\r\n    let key = (new Point(x,y)).toString();\r\n    if (this.pixels[key] === this.colorIndex) {\r\n      delete this.pixels[key];\r\n    } else {\r\n      this.pixels[key] = this.colorIndex;\r\n    }\r\n  }\r\n\r\n  doOutline:boolean = false;\r\n  initPoint:Point;\r\n  startCorner:Point;\r\n  outlineDim:Point;\r\n\r\n  initOutline(e) {\r\n    this.doOutline = true;\r\n    this.initPoint = Point.parse(e.target.attributes.alt.value);\r\n    this.startCorner = this.initPoint\r\n    this.outlineDim = new Point(1,1);\r\n  }\r\n\r\n  adjustOutline(e) {\r\n    if (this.doOutline) {\r\n      let temp = Point.parse(e.target.attributes.alt.value);\r\n      let min = this.initPoint.min(temp);\r\n      let max = this.initPoint.max(temp);\r\n      this.startCorner = min;\r\n      this.outlineDim = max.minus(min).plus(new Point(1,1));\r\n    }\r\n  }\r\n\r\n  completeOutline(e) {\r\n    this.doOutline = false;\r\n    console.log(\"complete\")\r\n    Range.max(this.outlineDim.y).forEach((y) => {\r\n      Range.max(this.outlineDim.x).forEach((x) => {\r\n        let key = (this.startCorner.plus(new Point(x,y))).toString();\r\n        if (this.pixels[key] === this.colorIndex) {\r\n          delete this.pixels[key];\r\n        } else {\r\n          this.pixels[key] = this.colorIndex;\r\n        }\r\n      })\r\n    })\r\n    this.initPoint = undefined;\r\n    this.outlineDim = undefined;\r\n    this.startCorner = undefined;\r\n  }\r\n\r\n  hasOutline() {\r\n    return this.outlineDim;\r\n  }\r\n}\r\n","module.exports = \"<svg *ngIf=\\\"palette && pixels\\\" [attr.width]=\\\"width * scale\\\" [attr.height]=\\\"height * scale\\\">\\r\\n  <rect *ngIf=\\\"palette[0]\\\" [attr.width]=\\\"width * scale\\\" [attr.height]=\\\"height * scale\\\"\\r\\n        [attr.fill]=\\\"palette[0]\\\" stroke=\\\"none\\\" stroke-width=\\\"0\\\"></rect>\\r\\n  <ng-container *ngFor=\\\"let y of range.max(height)\\\">\\r\\n    <ng-container *ngFor=\\\"let x of range.max(width)\\\">\\r\\n      <rect\\r\\n        *ngIf=\\\"pixels[x + 'x' + y]\\\"\\r\\n        [attr.alt]=\\\"x + 'x' + y\\\"\\r\\n        [attr.x]=\\\"x * scale\\\"\\r\\n        [attr.y]=\\\"y * scale\\\"\\r\\n        [attr.width]=\\\"scale\\\"\\r\\n        [attr.height]=\\\"scale\\\"\\r\\n        [attr.fill]=\\\"palette[pixels[x + 'x' + y]]\\\"\\r\\n        style=\\\"stroke:none;stroke-width:0;\\\"></rect>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</svg>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BpeGVsLXBhaW50ZXIvcGl4ZWwtcGFpbnRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, Input, OnInit, SimpleChanges, ViewChild} from '@angular/core';\r\nimport {Range} from \"../util/range\";\r\n\r\n@Component({\r\n  selector: 'pixel-painter',\r\n  templateUrl: './pixel-painter.component.html',\r\n  styleUrls: ['./pixel-painter.component.scss']\r\n})\r\nexport class PixelPainterComponent implements OnInit {\r\n  @ViewChild('myCanvas') canvasRef: ElementRef;\r\n\r\n  @Input()\r\n  pixels: {};\r\n\r\n  @Input()\r\n  scale: number;\r\n\r\n  @Input()\r\n  width: number;\r\n\r\n  @Input()\r\n  height: number;\r\n\r\n  @Input()\r\n  palette: string[];\r\n\r\n  range = Range;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {SpritelyData} from \"./spritely-data\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {DownloadLink} from \"../util/download-link\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpritelyFileService {\r\n\r\n  downloader: DownloadLink = new DownloadLink();\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  parseLoadData(loadData: string): Observable<SpritelyData> {\r\n    return this.client.post<SpritelyData>(\"/spritely/load\",loadData);\r\n  }\r\n\r\n  downloadImage(saveData: SpritelyData, scale: number, fileName: string, after: (() => void) = (() => {})): void {\r\n    this.client.post<String>(\"/spritely/img64\",{\r\n      \"art\":saveData,\r\n      \"scale\":scale\r\n    }).subscribe((base64) => {\r\n      this.downloader.setFileName(fileName);\r\n      this.downloader.setPath(\"data:image/png;base64,\" + base64);\r\n      this.downloader.invokeDownload();\r\n      after();\r\n    });\r\n  }\r\n\r\n  downloaddata(saveData: SpritelyData, fileName: string, after: (() => void) = (() => {})): void {\r\n    this.client.post<String>(\"/spritely/rawdata\",saveData).subscribe((rawdata) => {\r\n      this.downloader.setFileName(fileName);\r\n      this.downloader.setPath(\"data:text/plain;,\" + encodeURIComponent(rawdata.split(\"\\n\").join(\"\\r\\n\")));\r\n      this.downloader.invokeDownload();\r\n      after();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"spritelyForm\\\" class=\\\"topic\\\">\\r\\n  <div style=\\\"display: none\\\">\\r\\n    <select id=\\\"palette\\\" class=\\\"form-control\\\" formControlName=\\\"selectedPalette\\\" (change)=\\\"selectColor()\\\">\\r\\n      <ng-container *ngFor=\\\"let color of palette; index as i\\\">\\r\\n        <option *ngIf=\\\"i > 0\\\" value=\\\"{{i}}\\\">{{i}} - {{color||'Transparent'}}</option>\\r\\n      </ng-container>\\r\\n    </select>\\r\\n    <input #colorPicker type=\\\"color\\\" id=\\\"color\\\" class=\\\"nes-input form-control\\\" formControlName=\\\"color\\\" value=\\\"#000001\\\" (change)=\\\"setColor()\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"showcase col-lg-12\\\">\\r\\n    <div class=\\\"nes-container with-title\\\">\\r\\n      <div class=\\\"title\\\">\\r\\n        <label>Spritely </label>\\r\\n      </div>\\r\\n      <div class=\\\"d-flex flex-row small\\\">\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <accordian\\r\\n            tabId=\\\"fileTab\\\"\\r\\n            containerId=\\\"fileContainer\\\"\\r\\n            [initCollapsed]=\\\"true\\\"\\r\\n            label=\\\"File\\\">\\r\\n            <file-form\\r\\n              [defaultSaveFile]=\\\"defaultSaveFile\\\"\\r\\n              [prepareLoadedData]=\\\"fileDataReader()\\\"\\r\\n              [fileLoadCallback]=\\\"fileLoadCallback()\\\"\\r\\n              [invokeDownload]=\\\"dataDownloader()\\\">\\r\\n            </file-form>\\r\\n          </accordian>\\r\\n          <accordian\\r\\n            tabId=\\\"directionsTab\\\"\\r\\n            containerId=\\\"directionsContainer\\\"\\r\\n            [initCollapsed]=\\\"true\\\"\\r\\n            label=\\\"Help\\\">\\r\\n            <div class=\\\"nes-balloon from-left\\\">\\r\\n              <p>Spritely is a canvas for pixel art.</p>\\r\\n            </div>\\r\\n            <div class=\\\"nes-balloon from-right\\\">\\r\\n              <p>Build your palette below, then select a color in the palette to paint pixels that color, or to unpaint pixels already that color.</p>\\r\\n            </div>\\r\\n            <div class=\\\"nes-balloon from-left\\\">\\r\\n              <p>Changing the color of a slot in the palette will change the color of all matching pixels.</p>\\r\\n            </div>\\r\\n            <div class=\\\"nes-balloon from-right\\\">\\r\\n              <p>Deleting a color will unpaint all pixels that matching color</p>\\r\\n            </div>\\r\\n            <div class=\\\"nes-balloon from-left\\\">\\r\\n              <p>Unpainting pixels will return them to the background color.</p>\\r\\n            </div>\\r\\n          </accordian>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"showcase\\\">\\r\\n                <div class=\\\"nes-container with-title\\\">\\r\\n                  <div class=\\\"title\\\">\\r\\n                    <label>Palette</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-5 text-right\\\">\\r\\n                      <label for=\\\"backgroundColor\\\" class=\\\"text-brand\\\">Background Color:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-7\\\">\\r\\n                      <input type=\\\"color\\\" id=\\\"backgroundColor\\\" class=\\\"nes-input form-control\\\" formControlName=\\\"backgroundColor\\\" value=\\\"#fffffe\\\" (change)=\\\"setBackground()\\\"/>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 text-center\\\">\\r\\n                      <label for=\\\"makeTransparent\\\" class=\\\"text-brand\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"makeTransparent\\\" class=\\\"nes-checkbox\\\" formControlName=\\\"makeTransparent\\\" (change)=\\\"makeTransparent()\\\">\\r\\n                        <span>\\r\\n                          Make Transparent?\\r\\n                        </span>\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <hr/>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 text-center\\\">\\r\\n                      <button class=\\\"nes-btn is-success\\\" (click)=\\\"addColor()\\\">Add Color</button>\\r\\n                      <button class=\\\"nes-btn is-error\\\" (click)=\\\"removeColor()\\\">Remove Color</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <p></p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <accordian\\r\\n            tabId=\\\"transformsTab\\\"\\r\\n            containerId=\\\"transformsContainer\\\"\\r\\n            [initCollapsed]=\\\"true\\\"\\r\\n            label=\\\"Transforms\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12 text-center\\\">\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('turnLeft')\\\">Turn Left</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('turnRight')\\\">Turn Right</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('flipOver')\\\">Flip Over</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('flipDown')\\\">Flip Down</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('shiftLeft')\\\">Shift Left</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('shiftRight')\\\">Shift Right</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('shiftUp')\\\">Shift Up</button>\\r\\n                <button class=\\\"nes-btn is-warning\\\" (click)=\\\"transform('shiftDown')\\\">Shift Down</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </accordian>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"showcase\\\">\\r\\n                <div class=\\\"nes-container with-title\\\">\\r\\n                  <div class=\\\"title\\\">\\r\\n                    <label>Image</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-4 col-md-6\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                          <label for=\\\"scale\\\" class=\\\"text-brand\\\">Scale:</label>\\r\\n                          <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"20\\\" id=\\\"scale\\\" class=\\\"nes-input\\\" formControlName=\\\"scale\\\"/>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                          <label for=\\\"imgFile\\\" class=\\\"text-brand\\\">Image FileName:</label>\\r\\n                          <input type=\\\"text\\\" id=\\\"imgFile\\\" class=\\\"nes-input\\\" formControlName=\\\"imgFile\\\" placeholder=\\\"Image File\\\"/>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-8 text-right\\\">\\r\\n                      <button class=\\\"nes-btn\\\" (click)=\\\"downloadImage()\\\">\\r\\n                        <pixel-painter\\r\\n                          [pixels]=\\\"pixels\\\"\\r\\n                          [scale]=\\\"spritelyForm.value.scale\\\"\\r\\n                          [width]=\\\"spritelyForm.value.width\\\"\\r\\n                          [height]=\\\"spritelyForm.value.height\\\"\\r\\n                          [palette]=\\\"palette\\\"\\r\\n                        ></pixel-painter>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-7\\\">\\r\\n          <div class=\\\"showcase\\\">\\r\\n            <div class=\\\"nes-container\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-5 text-right\\\">\\r\\n                      <label for=\\\"width\\\" class=\\\"text-brand\\\">Width:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-7\\\">\\r\\n                      <input type=\\\"number\\\" min=\\\"8\\\" max=\\\"64\\\" id=\\\"width\\\" class=\\\"nes-input\\\" formControlName=\\\"width\\\" (change)=\\\"resize()\\\"/>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-5 text-right\\\">\\r\\n                      <label for=\\\"height\\\" class=\\\"text-brand\\\">Height:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-7\\\">\\r\\n                      <input type=\\\"number\\\" min=\\\"8\\\" max=\\\"64\\\" id=\\\"height\\\" class=\\\"nes-input\\\" formControlName=\\\"height\\\" (change)=\\\"resize()\\\"/>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <app-palette-display\\r\\n                    [palette]=\\\"palette\\\"\\r\\n                    [href]=\\\"'#/spritely'\\\"\\r\\n                    [selectFn]=\\\"colorIndexSetter()\\\"\\r\\n                    [setColorFn]=\\\"colorSetter()\\\"\\r\\n                  ></app-palette-display>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr/>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <app-pixel-canvas\\r\\n                    [pixels]=\\\"pixels\\\"\\r\\n                    [scale]=\\\"10\\\"\\r\\n                    [width]=\\\"min(spritelyForm.value.width,64)\\\"\\r\\n                    [height]=\\\"min(spritelyForm.value.height,64)\\\"\\r\\n                    [palette]=\\\"palette\\\"\\r\\n                    [backgroundColor]=\\\"spritelyForm.value.backgroundColor\\\"\\r\\n                    [colorIndex]=\\\"spritelyForm.value.selectedPalette\\\"\\r\\n                    page=\\\"spritely\\\"\\r\\n                  ></app-pixel-canvas>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n<pixel-pending label=\\\"Download\\\"></pixel-pending>\\r\\n\"","module.exports = \"textarea.pixel-canvas:before {\\n  counter-increment: line;\\n  content: counter(line);\\n  display: inline-block;\\n  border-right: 1px solid #ddd;\\n  padding: 0 .5em;\\n  margin-right: .5em;\\n  color: #888; }\\n\\nhr {\\n  border-top: 4px solid black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3ByaXRlbHkvQzpcXFVzZXJzXFxwb3NzbF8wMDBcXERvY3VtZW50c1xcR2l0SHViXFxjYXJhYmluZXJcXGZyb250L3NyY1xcYXBwXFxzcHJpdGVseVxcc3ByaXRlbHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHSSx1QkFBdUI7RUFDdkIsc0JBQXNCO0VBQ3RCLHFCQUFxQjtFQUNyQiw0QkFBNEI7RUFDNUIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixXQUNGLEVBQUE7O0FBR0Y7RUFDRSwyQkFBMkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Nwcml0ZWx5L3Nwcml0ZWx5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGV4dGFyZWEucGl4ZWwtY2FudmFzIHtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgY291bnRlci1pbmNyZW1lbnQ6IGxpbmU7XHJcbiAgICBjb250ZW50OiBjb3VudGVyKGxpbmUpO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2RkZDtcclxuICAgIHBhZGRpbmc6IDAgLjVlbTtcclxuICAgIG1hcmdpbi1yaWdodDogLjVlbTtcclxuICAgIGNvbG9yOiAjODg4XHJcbiAgfVxyXG59XHJcblxyXG5ociB7XHJcbiAgYm9yZGVyLXRvcDogNHB4IHNvbGlkIGJsYWNrO1xyXG59XHJcbiJdfQ== */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\n\r\nimport {Observable, of} from \"rxjs\";\r\n\r\nimport {Point} from \"../util/point\";\r\nimport {Range} from \"../util/range\";\r\nimport {Trigger} from \"../util/trigger\";\r\n\r\nimport {SpritelyData} from \"./spritely-data\";\r\nimport {SpritelyFileService} from \"./spritely-file.service\";\r\nimport {Transforms} from \"./transform\";\r\nimport {PixelPendingComponent} from \"../util/pixel-pending/pixel-pending.component\";\r\n\r\n@Component({\r\n  selector: 'app-spritely',\r\n  templateUrl: './spritely.component.html',\r\n  styleUrls: ['./spritely.component.scss']\r\n})\r\nexport class SpritelyComponent implements OnInit {\r\n\r\n  @ViewChild(PixelPendingComponent) pending: PixelPendingComponent;\r\n\r\n  @ViewChild('colorPicker') colorInputRef: ElementRef;\r\n\r\n  spritelyForm: FormGroup = this.fb.group({\r\n    selectedPalette:[0],\r\n    scale:[5],\r\n    width:[16],\r\n    height:[16],\r\n    color:['#000001'],\r\n    makeTransparent:[false],\r\n    backgroundColor:['#fffffe'],\r\n    imgFile:['']\r\n  });\r\n\r\n  palette: string[] = ['#fffffe'];\r\n\r\n  pixels: {} = {};\r\n\r\n  trigger: Trigger = new Trigger(\"redraw-pixels\");\r\n\r\n  defaultSaveFile: string;\r\n\r\n  colorInput: HTMLInputElement;\r\n\r\n  startingColors: string[] = [\"#000000\",\"#ff0000\",\"#00ff00\",\"#0000ff\",\"#ffff00\",\"#ff00ff\",\"#00ffff\",\"#ffffff\"];\r\n\r\n  constructor(private fb: FormBuilder, private sfs: SpritelyFileService) { }\r\n\r\n  ngOnInit() {\r\n    this.colorInput = this.colorInputRef.nativeElement as HTMLInputElement;\r\n  }\r\n\r\n  fileDataReader() {\r\n    let me = this;\r\n    return function(fileData): Observable<SpritelyData> {\r\n      return me.sfs.parseLoadData(fileData);\r\n    }\r\n  }\r\n\r\n  fileLoadCallback() {\r\n    let me = this;\r\n    return function(load) {\r\n      me.palette = load.palette;\r\n      me.pixels = load.pixels;\r\n      let formValues: any = {\r\n        width:load.width,\r\n        height:load.height,\r\n      };\r\n      if (me.palette[0]) {\r\n        formValues.makeTransparent = false;\r\n        formValues.backgroundColor = me.palette[0];\r\n      } else {\r\n        formValues.makeTransparent = true;\r\n      }\r\n      if (me.palette.length > 1) {\r\n        formValues.selectedPalette = 1;\r\n        formValues.color = me.palette[1];\r\n      }\r\n      me.spritelyForm.patchValue(formValues);\r\n    }\r\n  }\r\n\r\n  saveData(): any {\r\n    return {\r\n      pixels:this.pixels,\r\n      palette:this.palette,\r\n      width:this.spritelyForm.value.width,\r\n      height:this.spritelyForm.value.height\r\n    };\r\n  }\r\n\r\n  dataDownloader() {\r\n    let me = this;\r\n    return function(filename) {\r\n      me.pending.block();\r\n      me.sfs.downloaddata(me.saveData(),filename,\r\n      () => { me.pending.complete(); });\r\n    }\r\n  }\r\n\r\n  downloadImage() {\r\n    this.pending.block();\r\n    this.sfs.downloadImage(this.saveData(),\r\n      this.spritelyForm.value.scale,\r\n      this.spritelyForm.value.imgFile,\r\n      () => { this.pending.complete(); });\r\n  }\r\n\r\n  selectColor() {\r\n    this.spritelyForm.patchValue({\r\n      color:this.palette[this.spritelyForm.value.selectedPalette]\r\n    });\r\n  }\r\n\r\n  colorIndexSetter() {\r\n    let me = this;\r\n    return function(index) {\r\n      me.spritelyForm.patchValue({\r\n        selectedPalette:index\r\n      });\r\n      me.selectColor();\r\n    }\r\n  }\r\n\r\n  colorSetter() {\r\n    let me = this;\r\n    return function(index) {\r\n      me.spritelyForm.patchValue({\r\n        selectedPalette:index\r\n      });\r\n      me.selectColor();\r\n      me.colorInput.click();\r\n    }\r\n  }\r\n\r\n  makeTransparent() {\r\n    let t = this.spritelyForm.value.makeTransparent;\r\n    this.palette[0] = t?\"none\":this.spritelyForm.value.backgroundColor;\r\n  }\r\n\r\n  setBackground() {\r\n    this.palette[0] = this.spritelyForm.value.backgroundColor;\r\n  }\r\n\r\n  setColor() {\r\n    this.palette[this.spritelyForm.value.selectedPalette] = this.spritelyForm.value.color;\r\n  }\r\n\r\n  addColor() {\r\n    this.palette.push(this.startingColors[(this.palette.length % this.startingColors.length)]);\r\n    this.spritelyForm.patchValue({selectedPalette:(this.palette.length-1)});\r\n  }\r\n\r\n  removeColor() {\r\n    if (this.palette.length>1) {\r\n      this.palette.splice(this.spritelyForm.value.selectedPalette,1);\r\n      let len = this.palette.length;\r\n      let pixels = this.pixels;\r\n      Object.entries(pixels).forEach(entry => {\r\n        if(entry[1] >= len) {\r\n          delete pixels[entry[0]];\r\n        }\r\n      });\r\n      this.spritelyForm.patchValue({\r\n        selectedPalette:len - 1\r\n      })\r\n    }\r\n  }\r\n\r\n  transform(tf:Transforms) {\r\n    let width = this.spritelyForm.value.width;\r\n    let height = this.spritelyForm.value.height;\r\n    let pixels = this.pixels;\r\n    let entries = Object.entries(pixels);\r\n    let transformed: {} = {};\r\n    entries.forEach(function(entry: any[]){\r\n      let p: string = entry[0];\r\n      let newP: Point = Point.parse(p)[tf](width,height);\r\n      if(newP.isIn(width,height)) {\r\n        transformed[newP.toString()] = entry[1];\r\n      }\r\n      delete pixels[p];\r\n    });\r\n    Object.entries(transformed).forEach(function(entry:any[]){\r\n      pixels[entry[0]] = entry[1];\r\n    })\r\n  }\r\n\r\n  min() {\r\n    return Math.min.apply(Math,Array.from(arguments));\r\n  }\r\n\r\n  resize(){\r\n    this.spritelyForm.patchValue({\r\n      width:Math.min(64,Math.max(8,this.spritelyForm.value.width)),\r\n      height:Math.min(64,Math.max(8,this.spritelyForm.value.height)),\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div #accordianTab [attr.id]=\\\"tabId\\\" [ngClass]=\\\"{'col-md-12':true,'hide':(initCollapsed == false)}\\\">\\r\\n    <button class=\\\"nes-btn is-primary nes-accordian\\\" (click)=\\\"expand()\\\">{{label}}</button>\\r\\n  </div>\\r\\n  <div #accordianContainer [ngClass]=\\\"{'col-md-12':true,'hide':initCollapsed}\\\" [attr.id]=\\\"containerId\\\">\\r\\n    <div class=\\\"showcase\\\">\\r\\n      <div class=\\\"nes-container with-title\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n          <label>{{label}}</label>\\r\\n        </div>\\r\\n        <ng-content></ng-content>\\r\\n        <button class=\\\"nes-btn is-primary minimize\\\"  (click)=\\\"collapse()\\\">^</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvYWNjb3JkaWFuL2FjY29yZGlhbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'accordian',\r\n  templateUrl: './accordian.component.html',\r\n  styleUrls: ['./accordian.component.scss']\r\n})\r\nexport class AccordianComponent implements OnInit {\r\n  @ViewChild('accordianTab') tabRef: ElementRef;\r\n  @ViewChild('accordianContainer') containerRef: ElementRef;\r\n\r\n  @Input()\r\n  tabId: string;\r\n\r\n  @Input()\r\n  containerId: string;\r\n\r\n  @Input()\r\n  initCollapsed: boolean;\r\n\r\n  @Input()\r\n  label: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  expand() {\r\n    console.log('expand');\r\n    this.tabRef.nativeElement.classList.add(\"hide\");\r\n    this.containerRef.nativeElement.classList.remove(\"hide\");\r\n  }\r\n\r\n  collapse() {\r\n    console.log('collapse');\r\n    this.tabRef.nativeElement.classList.remove(\"hide\");\r\n    this.containerRef.nativeElement.classList.add(\"hide\");\r\n  }\r\n\r\n}\r\n","module.exports = \"<button type=\\\"button\\\" class=\\\"nes-btn\\\" [ngStyle]=\\\"{'background-color': (selectedValue||'white'), color:(selectedValue||'white')}\\\" (click)=\\\"open()\\\">________</button>\\r\\n<dialog #myDialog id=\\\"myDialog\\\" class=\\\"nes-dialog is-dark is-rounded\\\">\\r\\n  <form [formGroup]=\\\"colorForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div *ngIf=\\\"selectedValue\\\" [innerHTML]=\\\"paintSelectedValue() | safeHtml\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"d-flex flex-column\\\">\\r\\n          <div class=\\\"nes-field\\\">\\r\\n            <label for=\\\"colorValue\\\">Color Value</label>\\r\\n            <input type=\\\"text\\\" id=\\\"colorValue\\\" formControlName=\\\"value\\\" class=\\\"nes-input\\\" (change)=\\\"setColor()\\\">\\r\\n          </div>\\r\\n          <hr>\\r\\n          <div>\\r\\n            <label for=\\\"colorByName\\\">Color by Name</label>\\r\\n            <div class=\\\"nes-select\\\">\\r\\n              <select required id=\\\"colorByName\\\" class=\\\"nes-input\\\" formControlName=\\\"name\\\" (change)=\\\"setNamed()\\\">\\r\\n                <option value=\\\"\\\" disabled selected hidden>Select Color By Name</option>\\r\\n                <option *ngFor=\\\"let pair of colors | keyvalue\\\"\\r\\n                        [ngStyle]=\\\"{margin:'1em','background-color':pair.key,color:getForegroundColor(pair.value.toString())}\\\"\\r\\n                        [value]=\\\"pair.key\\\">{{pair.key}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr>\\r\\n          <div class=\\\"nes-field\\\">\\r\\n            <label for=\\\"red\\\">Red: {{colorForm.value.red}}</label>\\r\\n            <input type=\\\"range\\\" id=\\\"red\\\" formControlName=\\\"red\\\" min=\\\"0\\\" max=\\\"255\\\" class=\\\"nes-input\\\" (change)=\\\"setColorFromRGB()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"nes-field\\\">\\r\\n            <label for=\\\"green\\\">Green: {{colorForm.value.green}}</label>\\r\\n            <input type=\\\"range\\\" id=\\\"green\\\" formControlName=\\\"green\\\" min=\\\"0\\\" max=\\\"255\\\" class=\\\"nes-input\\\" (change)=\\\"setColorFromRGB()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"nes-field\\\">\\r\\n            <label for=\\\"blue\\\">Blue: {{colorForm.value.blue}}</label>\\r\\n            <input type=\\\"range\\\" id=\\\"blue\\\" formControlName=\\\"blue\\\" min=\\\"0\\\" max=\\\"255\\\" class=\\\"nes-input\\\" (change)=\\\"setColorFromRGB()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <table style=\\\"padding: 0; margin: 0;\\\">\\r\\n          <tr *ngFor=\\\"let y of range(12)\\\" style=\\\"padding: 0; margin: 0;\\\">\\r\\n            <td *ngFor=\\\"let x of range(18)\\\" style=\\\"padding: 0; margin: 0;\\\">\\r\\n              <button [ngStyle]=\\\"{'background-color':hexFromXY(x,y),color:hexFromXY(x,y)}\\\" (click)=\\\"setRGB(hexFromXY(x,y))\\\">_</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <menu class=\\\"dialog-menu text-right\\\">\\r\\n    <button class=\\\"nes-btn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    <button class=\\\"nes-btn is-primary\\\" (click)=\\\"confirm()\\\">Confirm</button>\\r\\n  </menu>\\r\\n</dialog>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvY29sb3ItcGlja2VyL2NvbG9yLXBpY2tlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {COLORS} from \"../colors\";\r\nimport {SVG} from \"../svg\";\r\n\r\n@Component({\r\n  selector: 'color-picker',\r\n  templateUrl: './color-picker.component.html',\r\n  styleUrls: ['./color-picker.component.scss']\r\n})\r\nexport class ColorPickerComponent implements OnInit {\r\n\r\n  @ViewChild('myDialog') dialogRef: ElementRef;\r\n\r\n  @Input()\r\n  selectedValue: string;\r\n\r\n  @Output()\r\n  retVal: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  colors:{} = COLORS;\r\n\r\n  invertedColors:{};\r\n\r\n  dialog: HTMLDialogElement;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.invertedColors = {};\r\n    Object.keys(this.colors).forEach((key) => {\r\n      this.invertedColors[this.colors[key]] = key;\r\n    });\r\n  }\r\n\r\n  colorForm: FormGroup = this.fb.group({\r\n    value:[''],\r\n    name:[''],\r\n    red:[127],\r\n    green:[127],\r\n    blue:[127]\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.dialog = this.dialogRef.nativeElement as HTMLDialogElement;\r\n  }\r\n\r\n  range(n: number) {\r\n    return \"?\".repeat(n).split('').map((c,i) => i);\r\n  }\r\n\r\n  hexFromRGB(r:number,g:number,b:number): string {\r\n    return '#' + [r,g,b].map((c) => {\r\n      let h: string = Number(c).toString(16);\r\n      if (h.length === 1) {\r\n        h = '0' + h;\r\n      }\r\n      return h;\r\n    }).join('');\r\n  }\r\n\r\n  rgbFromHex(hex: string) : {} {\r\n    if (hex) {\r\n      let rgb = [1,3,5].map((i) => parseInt(hex.substr(i,2),16));\r\n      return {\r\n        red: rgb[0],\r\n        green: rgb[1],\r\n        blue: rgb[2]\r\n      };\r\n    }\r\n  }\r\n\r\n  hexFromXY(x: number, y: number): string {\r\n    let r = ((3 * Math.floor(y/6)) + Math.floor(x/6));\r\n    let g = (x % 6);\r\n    let b = (y % 6);\r\n    [r, g, b] = [r, g, b].map((c):number => {\r\n      c *= 3;\r\n      return c + (c * 16);\r\n    });\r\n    return this.hexFromRGB(r,g,b);\r\n  }\r\n\r\n  private getColorType(color: string): string {\r\n    if (this.colors[color]) {\r\n      return \"name\";\r\n    }\r\n    if ((/[#]([0-9a-f]{6})/i.exec(color)||[])[0] == color) {\r\n      return \"hex\";\r\n    }\r\n    return;\r\n  }\r\n\r\n  applyName(name:string) {\r\n    let hex = this.colors[name];\r\n    let rgb = this.rgbFromHex(hex);\r\n    this.colorForm.patchValue({name:name,value:name});\r\n    this.colorForm.patchValue(rgb);\r\n    this.selectedValue = name;\r\n  }\r\n\r\n  applyHex(hex:string) {\r\n    if (hex) {\r\n      let rgb = this.rgbFromHex(hex);\r\n      let name = this.invertedColors[hex];\r\n      this.colorForm.patchValue({name:name,value:hex});\r\n      this.colorForm.patchValue(rgb);\r\n      this.selectedValue = hex;\r\n    }\r\n  }\r\n\r\n  applyColor(color:string) {\r\n    switch (this.getColorType(color)) {\r\n      case \"name\":\r\n        this.applyName(color);\r\n        break;\r\n      case \"hex\":\r\n        this.applyHex(color);\r\n        break;\r\n    }\r\n  }\r\n\r\n  setColor() {\r\n    this.applyColor(this.colorForm.value.value);\r\n  }\r\n\r\n  setNamed() {\r\n    this.applyName(this.colorForm.value.name);\r\n  }\r\n\r\n  setRGB(hex: string) {\r\n    this.applyHex(hex);\r\n  }\r\n\r\n  setColorFromRGB() {\r\n    let rgb = this.colorForm.value\r\n    this.applyHex(this.hexFromRGB(rgb.red,rgb.green,rgb.blue));\r\n  }\r\n\r\n  open() {\r\n    this.applyColor(this.selectedValue);\r\n    this.dialog.showModal();\r\n  }\r\n\r\n  cancel() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  confirm() {\r\n    this.retVal.emit(this.selectedValue);\r\n    this.dialog.close();\r\n  }\r\n\r\n  getForegroundColor(hex: string) {\r\n    let rgb = this.rgbFromHex(hex);\r\n    let luminosity = Math.sqrt(Math.pow(rgb[\"red\"], 2) * 0.299 + Math.pow(rgb[\"green\"], 2) * 0.587 + Math.pow(rgb[\"blue\"], 2) * 0.114);\r\n    return luminosity > 186 ? \"black\" : \"white\";\r\n  }\r\n\r\n  paintSelectedValue() {\r\n    return SVG.svg(\"100%\",\"100%\",{\r\n      viewBox:\"0 0 100 10\"\r\n    },[\r\n      SVG.rect(0,0,100,10,{\r\n        fill:this.selectedValue,\r\n        stroke:'black',\r\n        \"stroke-width\":'1'\r\n      })\r\n    ]);\r\n  }\r\n}\r\n","export const COLORS: {} = {\r\n  \"aquamarine\": \"#7FFFD4\",\r\n  \"lime\": \"#00FF00\",\r\n  \"deepskyblue\": \"#00BFFF\",\r\n  \"darksalmon\": \"#E9967A\",\r\n  \"antiquewhite\": \"#FAEBD7\",\r\n  \"mediumturquoise\": \"#48D1CC\",\r\n  \"slategrey\": \"#708090\",\r\n  \"slategray\": \"#708090\",\r\n  \"sienna\": \"#A0522D\",\r\n  \"orange\": \"#FFA500\",\r\n  \"navajowhite\": \"#FFDEAD\",\r\n  \"lavenderblush\": \"#FFF0F5\",\r\n  \"firebrick\": \"#B22222\",\r\n  \"orangered\": \"#FF4500\",\r\n  \"palevioletred\": \"#DB7093\",\r\n  \"lawngreen\": \"#7CFC00\",\r\n  \"seashell\": \"#FFF5EE\",\r\n  \"lightpink\": \"#FFB6C1\",\r\n  \"darkolivegreen\": \"#556B2F\",\r\n  \"aliceblue\": \"#F0F8FF\",\r\n  \"gray\": \"#808080\",\r\n  \"lightsteelblue\": \"#B0C4DE\",\r\n  \"whitesmoke\": \"#F5F5F5\",\r\n  \"darkgoldenrod\": \"#B8860B\",\r\n  \"tan\": \"#D2B48C\",\r\n  \"bisque\": \"#FFE4C4\",\r\n  \"white\": \"#FFFFFF\",\r\n  \"lightgreen\": \"#90EE90\",\r\n  \"darkseagreen\": \"#8FBC8F\",\r\n  \"crimson\": \"#DC143C\",\r\n  \"darkslategray\": \"#2F4F4F\",\r\n  \"mistyrose\": \"#FFE4E1\",\r\n  \"chocolate\": \"#D2691E\",\r\n  \"yellow\": \"#FFFF00\",\r\n  \"cadetblue\": \"#5F9EA0\",\r\n  \"navy\": \"#000080\",\r\n  \"ghostwhite\": \"#F8F8FF\",\r\n  \"dimgrey\": \"#696969\",\r\n  \"rebeccapurple\": \"#663399\",\r\n  \"seagreen\": \"#2E8B57\",\r\n  \"green\": \"#008000\",\r\n  \"mediumseagreen\": \"#3CB371\",\r\n  \"indigo\": \"#4B0082\",\r\n  \"olivedrab\": \"#6B8E23\",\r\n  \"cyan\": \"#00FFFF\",\r\n  \"peachpuff\": \"#FFDAB9\",\r\n  \"limegreen\": \"#32CD32\",\r\n  \"mediumslateblue\": \"#7B68EE\",\r\n  \"violet\": \"#EE82EE\",\r\n  \"sandybrown\": \"#F4A460\",\r\n  \"yellowgreen\": \"#9ACD32\",\r\n  \"mediumspringgreen\": \"#00FA9A\",\r\n  \"steelblue\": \"#4682B4\",\r\n  \"rosybrown\": \"#BC8F8F\",\r\n  \"cornflowerblue\": \"#6495ED\",\r\n  \"ivory\": \"#FFFFF0\",\r\n  \"lightgoldenrodyellow\": \"#FAFAD2\",\r\n  \"salmon\": \"#FA8072\",\r\n  \"darkcyan\": \"#008B8B\",\r\n  \"peru\": \"#CD853F\",\r\n  \"cornsilk\": \"#FFF8DC\",\r\n  \"lightslategray\": \"#778899\",\r\n  \"blueviolet\": \"#8A2BE2\",\r\n  \"forestgreen\": \"#228B22\",\r\n  \"lightseagreen\": \"#20B2AA\",\r\n  \"gold\": \"#FFD700\",\r\n  \"gainsboro\": \"#DCDCDC\",\r\n  \"darkorchid\": \"#9932CC\",\r\n  \"burlywood\": \"#DEB887\",\r\n  \"lightskyblue\": \"#87CEFA\",\r\n  \"chartreuse\": \"#7FFF00\",\r\n  \"snow\": \"#FFFAFA\",\r\n  \"moccasin\": \"#FFE4B5\",\r\n  \"honeydew\": \"#F0FFF0\",\r\n  \"aqua\": \"#00FFFF\",\r\n  \"darkred\": \"#8B0000\",\r\n  \"mediumorchid\": \"#BA55D3\",\r\n  \"lightsalmon\": \"#FFA07A\",\r\n  \"saddlebrown\": \"#8B4513\",\r\n  \"wheat\": \"#F5DEB3\",\r\n  \"springgreen\": \"#00FF7F\",\r\n  \"lightslategrey\": \"#778899\",\r\n  \"darkblue\": \"#00008B\",\r\n  \"powderblue\": \"#B0E0E6\",\r\n  \"turquoise\": \"#40E0D0\",\r\n  \"blanchedalmond\": \"#FFEBCD\",\r\n  \"papayawhip\": \"#FFEFD5\",\r\n  \"slateblue\": \"#6A5ACD\",\r\n  \"lightblue\": \"#ADD8E6\",\r\n  \"skyblue\": \"#87CEEB\",\r\n  \"red\": \"#FF0000\",\r\n  \"lightyellow\": \"#FFFFE0\",\r\n  \"blue\": \"#0000FF\",\r\n  \"palegreen\": \"#98FB98\",\r\n  \"greenyellow\": \"#ADFF2F\",\r\n  \"khaki\": \"#F0E68C\",\r\n  \"maroon\": \"#800000\",\r\n  \"darkgrey\": \"#A9A9A9\",\r\n  \"midnightblue\": \"#191970\",\r\n  \"floralwhite\": \"#FFFAF0\",\r\n  \"deeppink\": \"#FF1493\",\r\n  \"paleturquoise\": \"#AFEEEE\",\r\n  \"darkkhaki\": \"#BDB76B\",\r\n  \"azure\": \"#F0FFFF\",\r\n  \"indianred\": \"#CD5C5C\",\r\n  \"darkviolet\": \"#9400D3\",\r\n  \"mediumpurple\": \"#9370DB\",\r\n  \"fuchsia\": \"#FF00FF\",\r\n  \"coral\": \"#FF7F50\",\r\n  \"mediumvioletred\": \"#C71585\",\r\n  \"lemonchiffon\": \"#FFFACD\",\r\n  \"mediumblue\": \"#0000CD\",\r\n  \"darkmagenta\": \"#8B008B\",\r\n  \"goldenrod\": \"#DAA520\",\r\n  \"darkorange\": \"#FF8C00\",\r\n  \"orchid\": \"#DA70D6\",\r\n  \"plum\": \"#DDA0DD\",\r\n  \"pink\": \"#FFC0CB\",\r\n  \"teal\": \"#008080\",\r\n  \"magenta\": \"#FF00FF\",\r\n  \"lightgrey\": \"#D3D3D3\",\r\n  \"purple\": \"#800080\",\r\n  \"dodgerblue\": \"#1E90FF\",\r\n  \"darkturquoise\": \"#00CED1\",\r\n  \"mintcream\": \"#F5FFFA\",\r\n  \"hotpink\": \"#FF69B4\",\r\n  \"thistle\": \"#D8BFD8\",\r\n  \"royalblue\": \"#4169E1\",\r\n  \"darkgreen\": \"#006400\",\r\n  \"darkslateblue\": \"#483D8B\",\r\n  \"silver\": \"#C0C0C0\",\r\n  \"darkgray\": \"#A9A9A9\",\r\n  \"grey\": \"#808080\",\r\n  \"oldlace\": \"#FDF5E6\",\r\n  \"mediumaquamarine\": \"#66CDAA\",\r\n  \"brown\": \"#A52A2A\",\r\n  \"lightgray\": \"#D3D3D3\",\r\n  \"olive\": \"#808000\",\r\n  \"lightcoral\": \"#F08080\",\r\n  \"tomato\": \"#FF6347\",\r\n  \"lightcyan\": \"#E0FFFF\",\r\n  \"linen\": \"#FAF0E6\",\r\n  \"darkslategrey\": \"#2F4F4F\",\r\n  \"lavender\": \"#E6E6FA\",\r\n  \"dimgray\": \"#696969\",\r\n  \"palegoldenrod\": \"#EEE8AA\",\r\n  \"beige\": \"#F5F5DC\",\r\n  \"black\": \"#000000\"\r\n};\r\n","module.exports = \"<p>\\r\\n  confirm-cancel-dialog works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvY29uZmlybS1jYW5jZWwtZGlhbG9nL2NvbmZpcm0tY2FuY2VsLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confirm-cancel-dialog',\r\n  templateUrl: './confirm-cancel-dialog.component.html',\r\n  styleUrls: ['./confirm-cancel-dialog.component.scss']\r\n})\r\nexport class ConfirmCancelDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<button type=\\\"button\\\" name=\\\"button\\\" class=\\\"nes-btn is-success\\\" (click)=\\\"open()\\\">{{triggerBtnName}}</button>\\r\\n<dialog #myDialog class=\\\"nes-dialog is-dark is-rounded\\\">\\r\\n  <ng-content></ng-content>\\r\\n  <menu class=\\\"dialog-menu text-right\\\">\\r\\n    <button class=\\\"nes-btn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    <button class=\\\"nes-btn is-primary {{allowConfirm?'':'is-disabled'}}\\\"\\r\\n            [disabled]=\\\"!allowConfirm\\\" (click)=\\\"confirm()\\\">Confirm</button>\\r\\n  </menu>\\r\\n</dialog>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvZGlhbG9nLXdyYXBwZXIvZGlhbG9nLXdyYXBwZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dialog-wrapper',\r\n  templateUrl: './dialog-wrapper.component.html',\r\n  styleUrls: ['./dialog-wrapper.component.scss']\r\n})\r\nexport class DialogWrapperComponent implements OnInit {\r\n\r\n  @ViewChild('myDialog') dialogRef: ElementRef;\r\n\r\n  @Input()\r\n  triggerBtnName: string;\r\n\r\n  @Input()\r\n  allowConfirm: boolean = true;\r\n\r\n  @Input()\r\n  dialogConfirm: any;\r\n\r\n  @Input()\r\n  dialogClose: any;\r\n\r\n  @Input()\r\n  dialogOpen: any;\r\n\r\n  dialog: HTMLDialogElement;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.dialog = this.dialogRef.nativeElement as HTMLDialogElement;\r\n  }\r\n\r\n  open() {\r\n    if (this.dialogOpen) {\r\n      this.dialogOpen();\r\n    }\r\n    this.dialog.showModal();\r\n  }\r\n\r\n  confirm() {\r\n    if (this.dialogConfirm) {\r\n      this.dialogConfirm();\r\n    }\r\n    if (this.dialogClose) {\r\n      this.dialogClose();\r\n    }\r\n    this.dialog.close();\r\n  }\r\n\r\n  cancel() {\r\n    if (this.dialogClose) {\r\n      this.dialogClose();\r\n    }\r\n    this.dialog.close();\r\n  }\r\n\r\n}\r\n","export class DownloadLink {\r\n  private link: any;\r\n\r\n  constructor() {\r\n    this.link = document.createElement(\"a\");\r\n    this.link.target = \"_blank\";\r\n  }\r\n\r\n  setFileName(fileName: string) {\r\n    this.link.download = fileName;\r\n  }\r\n\r\n  setPath(href: string) {\r\n    this.link.href = href;\r\n  }\r\n\r\n  invokeDownload() {\r\n    if (this.link.href) {\r\n      this.link.click();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"fileForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 text-center\\\">\\r\\n      <dialog-wrapper\\r\\n        triggerBtnName=\\\"Load File\\\"\\r\\n        [dialogConfirm]=\\\"fileLoadConfirmer()\\\"\\r\\n        [dialogClose]=\\\"fileLoadCanceler()\\\">\\r\\n        <label>Load File:</label>\\r\\n        <file-load-input [loadedFileCallback]=\\\"tempDataReader()\\\" [loadErrorCallback]=\\\"loadErrorHandler()\\\"></file-load-input>\\r\\n        <p *ngIf=\\\"loadError\\\" class=\\\"note nes-text is-error\\\">{{loadError}}</p>\\r\\n      </dialog-wrapper>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-center\\\">\\r\\n      <dialog-wrapper\\r\\n        triggerBtnName=\\\"Save File\\\"\\r\\n        [dialogOpen]=\\\"saveDialogOpener()\\\"\\r\\n        [dialogConfirm]=\\\"saveDialogConfirmer()\\\">\\r\\n        <label for=\\\"saveFile\\\">Save:</label>\\r\\n        <input type=\\\"text\\\" id=\\\"saveFile\\\" class=\\\"nes-input\\\" formControlName=\\\"saveFile\\\" placeholder=\\\"Save File\\\"/>\\r\\n      </dialog-wrapper>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvZmlsZS1mb3JtL2ZpbGUtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Trigger } from '../trigger'\r\nimport { DownloadLink } from \"../download-link\";\r\nimport {SpritelyFileService} from \"../../spritely/spritely-file.service\";\r\n\r\n@Component({\r\n  selector: 'file-form',\r\n  templateUrl: './file-form.component.html',\r\n  styleUrls: ['./file-form.component.scss']\r\n})\r\nexport class FileFormComponent implements OnInit {\r\n\r\n  fileForm: FormGroup = this.fb.group({\r\n    saveFile:['']\r\n  });\r\n\r\n  @Input()\r\n  defaultSaveFile: string;\r\n\r\n  @Input()\r\n  prepareLoadedData: any;\r\n\r\n  @Input()\r\n  fileLoadCallback: any;\r\n\r\n  @Input()\r\n  buildSaveData: any;\r\n\r\n  @Input()\r\n  saveRoute:any;\r\n\r\n  @Input()\r\n  invokeDownload:any;\r\n\r\n  loadedFileData: any;\r\n\r\n  loadError: any;\r\n\r\n  saveDataUpdateTrigger: Trigger = new Trigger(\"update-save-data\");\r\n\r\n  readyToSave: boolean = false;\r\n\r\n  downloadLink: DownloadLink = new DownloadLink();\r\n\r\n  constructor(private fb: FormBuilder, private sf: SpritelyFileService) { }\r\n\r\n  ngOnInit() {\r\n    let me = this;\r\n    this.saveDataUpdateTrigger.addListener(function(e){\r\n      me.readyToSave = true;\r\n    })\r\n  }\r\n\r\n  tempDataReader() {\r\n    let me = this;\r\n    return function(fileData,fileName) {\r\n      me.prepareLoadedData(fileData).subscribe((data) => {\r\n        console.log(data);\r\n        me.loadedFileData = data;\r\n        me.fileForm.patchValue({\r\n          saveFile:fileName\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  fileLoadConfirmer() {\r\n    let me = this;\r\n    return function() {\r\n      if(!me.loadError) {\r\n        me.fileLoadCallback(me.loadedFileData);\r\n      }\r\n    }\r\n  }\r\n\r\n  fileLoadCanceler() {\r\n    let me = this;\r\n    return function() {\r\n      me.loadedFileData = undefined;\r\n    }\r\n  }\r\n\r\n  loadErrorHandler() {\r\n    let me = this;\r\n    return function(e) {\r\n      me.loadError = e.message;\r\n    }\r\n  }\r\n\r\n  saveDialogOpener() {\r\n    let me = this;\r\n    return function() {\r\n      console.log(\"opening save dialog\")\r\n    }\r\n  }\r\n\r\n  saveDialogConfirmer() {\r\n    let me = this;\r\n    return function() {\r\n      me.invokeDownload(me.fileForm.value.saveFile);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<label class=\\\"nes-btn\\\">\\r\\n  <span>Select your file</span>\\r\\n  <input type=\\\"file\\\" style=\\\"display: none;\\\" (change)=\\\"loadFile($event)\\\">\\r\\n</label>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvZmlsZS1sb2FkLWlucHV0L2ZpbGUtbG9hZC1pbnB1dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'file-load-input',\r\n  templateUrl: './file-load-input.component.html',\r\n  styleUrls: ['./file-load-input.component.scss']\r\n})\r\nexport class FileLoadInputComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @Input()\r\n  loadedFileCallback: any;\r\n\r\n  @Input()\r\n  loadErrorCallback: any;\r\n\r\n  loadFile(e) {\r\n    console.log(\"load file\");\r\n    let inputValue = e.target;\r\n    let file:File = inputValue.files[0];\r\n    let myReader:FileReader = new FileReader();\r\n    var me = this;\r\n    myReader.onload = function(e){\r\n      // you can perform an action with readed data here\r\n      try {\r\n        me.loadedFileCallback(myReader.result,file.name);\r\n      } catch(e) {\r\n        console.log(e);\r\n        me.loadErrorCallback(e);\r\n      }\r\n    }\r\n    myReader.readAsText(file);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"show\\\" class=\\\"showcase nes-tab-body\\\">\\r\\n  <div class=\\\"nes-container with-title\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n      <h5>{{label}}</h5>\\r\\n    </div>\\r\\n    <ng-content></ng-content>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvbmVzLXRhYnMvY2hpbGQtcGFuZWwvY2hpbGQtcGFuZWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tab-child',\r\n  templateUrl: './child-panel.component.html',\r\n  styleUrls: ['./child-panel.component.scss']\r\n})\r\nexport class ChildPanelComponent implements OnInit {\r\n\r\n  @Input()\r\n  label: string;\r\n\r\n  show: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"showcase\\\">\\r\\n      <div class=\\\"nes-container with-title\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n          <h4 style=\\\"display: inline;\\\">&nbsp;{{title}}&nbsp;</h4>\\r\\n          <ng-container *ngFor=\\\"let child of children; index as i\\\">\\r\\n            <button class=\\\"nes-btn nes-tab-btn {{(activeIndex == i) ? activeClass : ''}}\\\" (click)=\\\"select(i)\\\">{{child.label}}</button>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ng-content></ng-content>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvbmVzLXRhYnMvdGFiYmVkLXBhbmVsL3RhYmJlZC1wYW5lbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, QueryList, ContentChildren, AfterContentInit  } from '@angular/core';\r\nimport { ChildPanelComponent } from '../child-panel/child-panel.component';\r\n\r\n@Component({\r\n  selector: 'tabbed-panel',\r\n  templateUrl: './tabbed-panel.component.html',\r\n  styleUrls: ['./tabbed-panel.component.scss']\r\n})\r\nexport class TabbedPanelComponent implements OnInit, AfterContentInit {\r\n\r\n  @ContentChildren(ChildPanelComponent)\r\n  children: QueryList<ChildPanelComponent>;\r\n\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  activeClass: string;\r\n\r\n  @Input()\r\n  initActiveIndex: number;\r\n\r\n  activeIndex: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.activeIndex = this.initActiveIndex;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.children.toArray()[this.activeIndex].show = true;\r\n  }\r\n\r\n  select(index: number) {\r\n    this.children.toArray()[this.activeIndex].show = false;\r\n    this.activeIndex = index;\r\n    this.children.toArray()[this.activeIndex].show = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  okay-dialog works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvb2theS1kaWFsb2cvb2theS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-okay-dialog',\r\n  templateUrl: './okay-dialog.component.html',\r\n  styleUrls: ['./okay-dialog.component.scss']\r\n})\r\nexport class OkayDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" >\\r\\n  <div *ngIf=\\\"palette && (palette.length == (showFirst?0:1))\\\" class=\\\"col-sm-12 nes-input text-center\\\">\\r\\n    <span>Add colors to your palette to paint.</span>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"palette && (palette.length > (showFirst?0:1))\\\" class=\\\"col-sm-12 text-justify palette\\\" [style.margin]=\\\"0\\\">\\r\\n    <ng-container *ngFor=\\\"let c of palette; index as i\\\">\\r\\n      <a *ngIf=\\\"showFirst || i > 0\\\"\\r\\n        class=\\\"palette-item\\\"\\r\\n        [style.width]=\\\"((100/(palette.length - (showFirst?0:1))) - 2)+'%'\\\"\\r\\n        href=\\\"{{href}}\\\"\\r\\n        (click)=\\\"select(i)\\\"\\r\\n        (dblclick)=\\\"setColor(i)\\\"\\r\\n        >\\r\\n        <span class=\\\"nes-input palette-color {{(activeIndex == i)?'is-error':''}}\\\"\\r\\n              [style.color]=\\\"c\\\"\\r\\n              [style.backgroundColor]=\\\"c\\\"\\r\\n        >_</span>\\r\\n      </a>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvcGFsZXR0ZS1kaXNwbGF5L3BhbGV0dGUtZGlzcGxheS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-palette-display',\r\n  templateUrl: './palette-display.component.html',\r\n  styleUrls: ['./palette-display.component.scss']\r\n})\r\nexport class PaletteDisplayComponent implements OnInit {\r\n\r\n  @Input()\r\n  palette: string[];\r\n\r\n  @Input()\r\n  href: string;\r\n\r\n  @Input()\r\n  showFirst: boolean;\r\n\r\n  @Input()\r\n  selectFn: Function;\r\n\r\n  @Input()\r\n  setColorFn: Function;\r\n\r\n  activeIndex: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  select(index:number):void {\r\n    this.selectFn(index);\r\n    this.activeIndex = index;\r\n  }\r\n\r\n  setColor(index:number):void {\r\n    this.select(index);\r\n    this.setColorFn(index);\r\n  }\r\n\r\n}\r\n","module.exports = \"<dialog #pendingDialog  class=\\\"nes-dialog is-dark is-rounded\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      {{label}} pending ...\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n        <rect x=\\\"10\\\" y=\\\"10\\\" width=\\\"20\\\" height=\\\"20\\\" fill=\\\"white\\\">\\r\\n          <animate id=\\\"anim1\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"white\\\" to=\\\"black\\\" begin=\\\"0s; anim2.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n          <animate id=\\\"anim2\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"black\\\" to=\\\"white\\\" begin=\\\"anim1.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n        </rect>\\r\\n      </svg>\\r\\n      <svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" version=\\\"1.1\\\"\\r\\n           xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n        <rect x=\\\"10\\\" y=\\\"10\\\" width=\\\"20\\\" height=\\\"20\\\" fill=\\\"white\\\">\\r\\n          <animate id=\\\"anim3\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"white\\\" to=\\\"red\\\" begin=\\\"0.5s; anim4.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n          <animate id=\\\"anim4\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"red\\\" to=\\\"white\\\" begin=\\\"anim3.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n        </rect>\\r\\n      </svg>\\r\\n      <svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n        <rect x=\\\"10\\\" y=\\\"10\\\" width=\\\"20\\\" height=\\\"20\\\" fill=\\\"white\\\">\\r\\n          <animate id=\\\"anim5\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"white\\\" to=\\\"green\\\" begin=\\\"1s; anim6.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n          <animate id=\\\"anim6\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"green\\\" to=\\\"white\\\" begin=\\\"anim5.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n        </rect>\\r\\n      </svg>\\r\\n      <svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n        <rect x=\\\"10\\\" y=\\\"10\\\" width=\\\"20\\\" height=\\\"20\\\" fill=\\\"white\\\">\\r\\n          <animate id=\\\"anim7\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"white\\\" to=\\\"blue\\\" begin=\\\"1.5s; anim8.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n          <animate id=\\\"anim8\\\" attributeType=\\\"XML\\\" attributeName=\\\"fill\\\" from=\\\"blue\\\" to=\\\"white\\\" begin=\\\"anim7.end\\\" dur=\\\"1s\\\" repeatCount=\\\"\\\"/>\\r\\n        </rect>\\r\\n      </svg>\\r\\n    </div>\\r\\n  </div>\\r\\n</dialog>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWwvcGl4ZWwtcGVuZGluZy9waXhlbC1wZW5kaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pixel-pending',\r\n  templateUrl: './pixel-pending.component.html',\r\n  styleUrls: ['./pixel-pending.component.scss']\r\n})\r\nexport class PixelPendingComponent implements OnInit {\r\n\r\n  @ViewChild('pendingDialog') dialogRef: ElementRef;\r\n\r\n  @Input()\r\n  label: string = \"\";\r\n\r\n  dialog: HTMLDialogElement;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.dialog = this.dialogRef.nativeElement as HTMLDialogElement;\r\n  }\r\n\r\n  block(): void {\r\n    console.log(\"blocking\");\r\n    this.dialog.showModal();\r\n  }\r\n\r\n  complete(): void {\r\n    console.log(\"pending complete\");\r\n    this.dialog.close();\r\n  }\r\n\r\n}\r\n","export class Point {\r\n  x:number;\r\n  y:number;\r\n\r\n  constructor(x:number,y:number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  isIn(width:number, height:number) {\r\n    return (this.x >= 0) && (this.x < width) && (this.y >= 0) && (this.y < height);\r\n  }\r\n\r\n  min(p:Point) {\r\n    return new Point(Math.min(this.x,p.x),Math.min(this.y,p.y));\r\n  }\r\n\r\n  max(p:Point) {\r\n    return new Point(Math.max(this.x,p.x),Math.max(this.y,p.y));\r\n  }\r\n\r\n  plus(p:Point) {\r\n    return new Point(this.x+p.x,this.y+p.y);\r\n  }\r\n\r\n  minus(p:Point) {\r\n    let min = this.min(p);\r\n    let max = this.max(p);\r\n    return new Point(max.x-min.x,max.y-min.y);\r\n  }\r\n\r\n  equals(p:Point) {\r\n    return this.x == p.x && this.y == p.y;\r\n  }\r\n\r\n  toString() {\r\n    return this.x + 'x' + this.y;\r\n  }\r\n\r\n  static parse(xy: string) {\r\n    let p = xy.split(\"x\").map(n => parseInt(n));\r\n    return new Point(p[0],p[1]);\r\n  }\r\n\r\n  private turnLeft(width:number,height:number) {\r\n    let dim = Math.min(width,height) - 1;\r\n    return new Point(this.y,dim - this.x);\r\n  }\r\n\r\n  private turnRight(width:number,height:number) {\r\n    let dim = Math.min(width,height) - 1;\r\n    return new Point(dim - this.y,this.x);\r\n  }\r\n\r\n  private flipOver(width:number,height:number) {\r\n    return new Point((width-1)-this.x,this.y);\r\n  }\r\n\r\n  private flipDown(width:number,height:number) {\r\n    return new Point(this.x,(height-1)-this.y);\r\n  }\r\n\r\n  private shiftLeft(width:number,height:number) {\r\n    return new Point(this.x-1,this.y);\r\n  }\r\n\r\n  private shiftRight(width:number,height:number) {\r\n    return new Point(this.x+1,this.y);\r\n  }\r\n\r\n  private shiftUp(width:number,height:number) {\r\n    return new Point(this.x,this.y-1);\r\n  }\r\n\r\n  private shiftDown(width:number,height:number) {\r\n    return new Point(this.x,this.y+1);\r\n  }\r\n}\r\n","export class Range {\r\n  public static max(max: number): number[] {\r\n    return Range.minmax(0,max);\r\n  }\r\n\r\n  public static minmax(min: number, max: number): number[] {\r\n    return Range.minmaxstep(min, max, 1);\r\n  }\r\n\r\n  public static minmaxstep(min: number, max: number, step: number): number[] {\r\n    let out: number[] = [];\r\n    for (let x = min; x < max; x += step) {\r\n      out.push(x);\r\n    }\r\n    return out;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer:DomSanitizer){}\r\n\r\n  transform(value: any, args?: any): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n\r\n}\r\n","export class SVG {\r\n  private static attrs(attrs:{}):string {\r\n    return Object.entries(attrs).map(([key, value]) => {\r\n      return key + '=\"' + (value as string) + '\"';\r\n    }).join(\" \");\r\n  }\r\n\r\n  public static svg(width:string, height:string, args:{\r\n    viewBox?:string\r\n  },contents:string[]): string {\r\n    return `<svg width=\"${width}\" height=\"${height}\" ${SVG.attrs(args)}>${contents.join('\\n')}</svg>`;\r\n  }\r\n\r\n  public static rect(x:number,y:number,width:number,height:number,style:{\r\n    fill?:string,\r\n    stroke?:string,\r\n    \"stroke-width\"?:string\r\n  }): string {\r\n    return `<rect x=\"${x}\" y=\"${y}\" width=\"${width}\" height=\"${height}\" ${SVG.attrs(style)}></rect>`;\r\n  }\r\n\r\n  public static group(style:{\r\n    transform?:string,\r\n    opacity?:string,\r\n    fill?:string,\r\n    stroke?:string,\r\n    \"stroke-width\"?:string\r\n  },contents:string[]): string {\r\n    return `<g ${SVG.attrs(style)}>${contents.join('\\n')}</g>`;\r\n  }\r\n\r\n  public static anchor(href:string, style:{\r\n    onclick?:string\r\n  },contents:string[]): string {\r\n    return `<a href=\"${href}\" ${SVG.attrs(style)}>${contents.join('\\n')}</a>`;\r\n  }\r\n\r\n  public static use(ref:string, style:{\r\n    fill?:string,\r\n    stroke?:string,\r\n    \"stroke-width\"?:string\r\n  }): string {\r\n    return `<use xlink:href=\"${ref}\" ${SVG.attrs(style)}></use>`;\r\n  }\r\n}\r\n","export class Trigger {\r\n  private elem: any = document.createElement(\"span\");\r\n  private eventName: string;\r\n  private listeners: Function[] = [];\r\n\r\n  constructor(eventName: string) {\r\n    this.eventName = eventName;\r\n  }\r\n\r\n  addListener(fn: Function): number {\r\n    let len = this.listeners.length;\r\n    this.listeners.push(fn);\r\n    this.elem.addEventListener(this.eventName, fn);\r\n    return len;\r\n  }\r\n\r\n  fireWithDetail(detail) {\r\n    this.elem.dispatchEvent(new CustomEvent(this.eventName,{detail:detail}));\r\n  }\r\n\r\n  fire() {\r\n    this.elem.dispatchEvent(new Event(this.eventName));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  mock:false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}